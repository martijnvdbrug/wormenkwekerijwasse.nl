{"version":3,"sources":["webpack:///src/extensions/ef209228555798f391f578d3e9291891122e76194896b35fec3c371010fe1a66/queries.ts","webpack:///src/extensions/ef209228555798f391f578d3e9291891122e76194896b35fec3c371010fe1a66/block-list.component.html","webpack:///src/extensions/ef209228555798f391f578d3e9291891122e76194896b35fec3c371010fe1a66/block-list.component.ts","webpack:///src/extensions/ef209228555798f391f578d3e9291891122e76194896b35fec3c371010fe1a66/block-detail.component.html","webpack:///src/extensions/ef209228555798f391f578d3e9291891122e76194896b35fec3c371010fe1a66/block-detail.component.ts","webpack:///src/extensions/ef209228555798f391f578d3e9291891122e76194896b35fec3c371010fe1a66/simple-cms.module.ts"],"names":["SIMPLE_CONTENTBLOCK_FRAGMENT","CREATE_CONTENTBLOCK","GET_CONTENTBLOCK","GET_CONTENTBLOCKS","UPDATE_CONTENTBLOCK","DELETE_CONTENTBLOCK","baseDataService","notificationService","blocks","this","query","single$","subscribe","res","simpleContentBlocks","err","error","id","window","confirm","mutate","success","ngOnInit","formBuilder","router","modalService","route","descriptionWordCount","detailForm","group","title","required","slug","description","body","params","block","simpleContentBlock","patchValue","featuredAssetUrl","featuredImage","setValue","replace","toLowerCase","values","getRawValue","console","log","input","featuredAsset","preview","updateSimpleContentBlock","createSimpleContentBlock","navigate","length","fromComponent","size","result","save","$event","preventDefault","updateSlug","countWords","SimpleCmsModule","forChild","path","pathMatch","component","data","breadcrumb"],"mappings":"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","file":"x","sourcesContent":["import gql from 'graphql-tag';\n\nexport const SIMPLE_CONTENTBLOCK_FRAGMENT = gql`\n    fragment SimpleContentBlockFragment on SimpleContentBlock {\n        id\n        createdAt\n        updatedAt\n        author\n        title\n        slug\n        featuredImage\n        description\n        body\n    }`;\n\nexport const CREATE_CONTENTBLOCK = gql`\n    mutation createSimpleContentBlock($input: SimpleContentBlockInput!) {\n        createSimpleContentBlock(input: $input) {\n            ...SimpleContentBlockFragment\n        }\n    }\n    ${SIMPLE_CONTENTBLOCK_FRAGMENT}\n`;\n\nexport const GET_CONTENTBLOCK = gql`\n    query simpleContentBlock($id: ID!) {\n        simpleContentBlock(id: $id) {\n            ...SimpleContentBlockFragment\n        }\n    }\n    ${SIMPLE_CONTENTBLOCK_FRAGMENT}\n`;\n\nexport const GET_CONTENTBLOCKS = gql`\n    query simpleContentBlocks {\n        simpleContentBlocks {\n            ...SimpleContentBlockFragment\n        }\n    }\n    ${SIMPLE_CONTENTBLOCK_FRAGMENT}\n`;\n\nexport const UPDATE_CONTENTBLOCK = gql`\n    mutation updateSimpleContentBlock($id: ID!, $input: SimpleContentBlockInput!) {\n        updateSimpleContentBlock(id: $id, input: $input) {\n            ...SimpleContentBlockFragment\n        }\n    }\n    ${SIMPLE_CONTENTBLOCK_FRAGMENT}\n`;\n\nexport const DELETE_CONTENTBLOCK = gql`\n    mutation deleteSimpleContentBlock($id: ID!) {\n        deleteSimpleContentBlock(id: $id)\n    }\n`;","<vdr-ab-right>\n    <vdr-action-bar-items locationId=\"product-list\"></vdr-action-bar-items>\n    <a class=\"btn btn-primary\" [routerLink]=\"['./create']\" *vdrIfPermissions=\"'CreateCatalog'\">\n        <clr-icon shape=\"plus\"></clr-icon>\n    </a>\n</vdr-ab-right>\n\n<br>\n<br>\n<br>\n<br>\n\n<table style=\"width: 80%;\">\n    <tr *ngFor=\"let block of blocks\">\n        <td [routerLink]=\"block.id\"><a>{{ block.title }}</a></td>\n        <td>\n            <a class=\"btn btn-sml\" (click)=\"delete(block.id)\" >\n                <clr-icon shape=\"trash\" class=\"is-danger\"></clr-icon>\n            </a>\n        </td>\n    </tr>\n</table>\n","import {Component, OnInit} from '@angular/core';\nimport {BaseDataService, NotificationService} from '@vendure/admin-ui/core';\nimport {DELETE_CONTENTBLOCK, GET_CONTENTBLOCKS} from './queries';\n\n@Component({\n    selector: 'content-block-list',\n    templateUrl: './block-list.component.html',\n})\nexport class BlockListComponent implements OnInit {\n\n    blocks = [];\n\n    constructor(\n        private baseDataService: BaseDataService,\n        private notificationService: NotificationService\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.baseDataService.query(GET_CONTENTBLOCKS).single$.subscribe(\n            (res) => this.blocks = (res as any).simpleContentBlocks,\n            err => this.notificationService.error(`Failed to get contentBlocks!`),\n        );\n    }\n\n    delete(id: string) {\n        if (window.confirm(`Are you sure?`)) {\n            this.baseDataService.mutate(DELETE_CONTENTBLOCK, {id}).subscribe(\n                (res) => {\n                    this.notificationService.success(`Deleted`)\n                    this.ngOnInit();\n                },\n                err => this.notificationService.error(`Failed to delete content!`)\n            )\n        }\n    }\n\n\n}","<vdr-ab-right>\n    <button\n            class=\"btn btn-secondary\"\n            *vdrIfPermissions=\"'UpdateCatalog'\"\n            (click)=\"cancel()\"\n    >\n        Cancel\n    </button>\n    <button\n            class=\"btn btn-primary\"\n            (click)=\"save()\"\n            [disabled]=\"detailForm.invalid || detailForm.pristine\"\n    >\n        Save\n    </button>\n</vdr-ab-right>\n\n<form\n        class=\"form\"\n        [formGroup]=\"detailForm\"\n        (keydown.enter)=\"$event.preventDefault()\"\n>\n\n    <vdr-form-field label=\"Featured asset\" for=\"featuredAsset\">\n        <div class=\"card\">\n            <div class=\"card-img\">\n                <div class=\"featured-asset\">\n                    <img\n                            *ngIf=\"featuredAsset\"\n                            [src]=\"featuredAsset | assetPreview:'small' \"\n                            (click)=\"selectFeaturedAsset()\"\n                    />\n                    <p *ngIf=\"featuredAssetUrl && !featuredAsset\">{{ featuredAssetUrl }}</p>\n                    <div class=\"placeholder\" *ngIf=\"!featuredAsset\" (click)=\"selectFeaturedAsset()\">\n                        <clr-icon shape=\"image\" size=\"128\"></clr-icon>\n                        <div>{{ 'catalog.no-featured-asset' | translate }}</div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"card-block\"><ng-container ></ng-container></div>\n            <div class=\"card-footer\" *vdrIfPermissions=\"'UpdateCatalog'\">\n                <button class=\"btn\" (click)=\"selectFeaturedAsset()\">\n                    <clr-icon shape=\"attachment\"></clr-icon>\n                    {{ 'asset.add-asset' | translate }}\n                </button>\n            </div>\n        </div>\n    </vdr-form-field>\n\n    <vdr-form-field label=\"Title\" for=\"title\">\n        <input\n                id=\"title\"\n                type=\"text\"\n                formControlName=\"title\"\n                (input)=\"updateSlug($event.target.value)\"\n        />\n    </vdr-form-field>\n    <vdr-form-field label=\"Slug\" for=\"slug\">\n        <input\n                id=\"slug\"\n                type=\"text\"\n                formControlName=\"slug\"\n        />\n    </vdr-form-field>\n    <vdr-form-field label=\"SEO description ({{ descriptionWordCount }}) \" for=\"description\">\n        <textarea id=\"description\" formControlName=\"description\" style=\"width: 100%\" (input)=\"countWords()\"></textarea>\n    </vdr-form-field>\n    <vdr-rich-text-editor\n            id=\"contentBlockRte\"\n            formControlName=\"body\"\n            label=\"Content body\"\n    ></vdr-rich-text-editor>\n\n\n</form>","import {Component, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {\r\n    Asset,\r\n    AssetPickerDialogComponent,\r\n    BaseDataService,\r\n    ModalService,\r\n    NotificationService\r\n} from '@vendure/admin-ui/core';\r\nimport {CREATE_CONTENTBLOCK, GET_CONTENTBLOCK, UPDATE_CONTENTBLOCK} from './queries';\r\n\r\n@Component({\r\n    selector: 'content-block-detail',\r\n    styleUrls: ['./block-detail.component.scss'],\r\n    templateUrl: './block-detail.component.html',\r\n})\r\nexport class BlockDetailComponent implements OnInit {\r\n\r\n    detailForm: FormGroup;\r\n    descriptionWordCount = 0;\r\n    featuredAsset?: Asset;\r\n    featuredAssetUrl?: string\r\n    id?: string;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private router: Router,\r\n        private modalService: ModalService,\r\n        private baseDataService: BaseDataService,\r\n        private notificationService: NotificationService,\r\n        private route: ActivatedRoute,\r\n    ) {\r\n        this.detailForm = this.formBuilder.group({\r\n            title: ['', Validators.required],\r\n            slug: '',\r\n            description: '',\r\n            body: ['', Validators.required]\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.route.params.subscribe(params => {\r\n            this.id = params.id;\r\n            if (!this.id) {\r\n                return;\r\n            }\r\n            this.baseDataService.query(GET_CONTENTBLOCK, {id: this.id}).single$.subscribe(\r\n                (res) => {\r\n                    const block = (res as any).simpleContentBlock;\r\n                    this.detailForm.patchValue({\r\n                        title: block.title,\r\n                        slug: block.slug,\r\n                        description: block.description,\r\n                        body: block.body\r\n                    });\r\n                    this.featuredAssetUrl = block.featuredImage;\r\n                },\r\n                err => this.notificationService.error(`Failed to get block ${this.id}`)\r\n            );\r\n        });\r\n    }\r\n\r\n    updateSlug(title: string): void {\r\n        if (!title) {\r\n            return this.detailForm.setValue({slug: ''});\r\n        }\r\n        this.detailForm.patchValue({slug: title.replace(/\\s+/g, '-').toLowerCase()});\r\n    }\r\n\r\n    save(): void {\r\n        const values = this.detailForm.getRawValue();\r\n        console.log('ID', this.id);\r\n        const input = {\r\n            featuredImage: this.featuredAsset?.preview,\r\n            title: values.title,\r\n            slug: values.slug,\r\n            description: values.description,\r\n            body: values.body\r\n        };\r\n        if (this.id) {\r\n            this.baseDataService.mutate(UPDATE_CONTENTBLOCK, {\r\n                id: this.id,\r\n                input\r\n            }).subscribe(\r\n                (res) => {\r\n                    this.id = (res as any)?.updateSimpleContentBlock?.id;\r\n                    this.notificationService.success(`Saved`);\r\n                },\r\n                err => this.notificationService.error(`Failed to update content!`),\r\n            );\r\n        } else {\r\n            this.baseDataService.mutate(CREATE_CONTENTBLOCK, {\r\n                input\r\n            }).subscribe(\r\n                (res) => {\r\n                    this.id = (res as any)?.createSimpleContentBlock?.id;\r\n                    this.notificationService.success(`Saved`);\r\n                },\r\n                err => this.notificationService.error(`Failed to update content!`),\r\n            );\r\n        }\r\n    }\r\n\r\n    cancel(): void {\r\n        if (window.confirm(`Are you sure?`)) {\r\n            this.router.navigate(['../extensions/simple-cms']);\r\n        }\r\n    }\r\n\r\n    countWords(): void {\r\n        this.descriptionWordCount = this.detailForm.getRawValue().description?.length || 0\r\n    }\r\n\r\n    selectFeaturedAsset(): void {\r\n        this.modalService\r\n            .fromComponent(AssetPickerDialogComponent, {\r\n                size: 'xl',\r\n            })\r\n            .subscribe(result => {\r\n                if (result && result.length) {\r\n                    // this.assets = unique(this.assets.concat(result), 'id');\r\n                    this.featuredAsset = result[0];\r\n                }\r\n            });\r\n    }\r\n\r\n}","import {NgModule} from '@angular/core';\nimport {RouterModule} from '@angular/router';\nimport {SharedModule} from '@vendure/admin-ui/core';\nimport {BlockListComponent} from './block-list.component';\nimport {BlockDetailComponent} from './block-detail.component';\n\n@NgModule({\n    imports: [\n        SharedModule,\n        RouterModule.forChild([{\n            path: '',\n            pathMatch: 'full',\n            component: BlockListComponent,\n            data: {breadcrumb: 'Content'},\n        }, {\n            path: 'create',\n            pathMatch: 'full',\n            component: BlockDetailComponent,\n            data: {breadcrumb: 'Content'},\n        }, {\n            path: ':id',\n            pathMatch: 'full',\n            component: BlockDetailComponent,\n            data: {breadcrumb: 'Content'},\n        }]),\n    ],\n    declarations: [BlockListComponent, BlockDetailComponent],\n})\nexport class SimpleCmsModule {\n}"]}