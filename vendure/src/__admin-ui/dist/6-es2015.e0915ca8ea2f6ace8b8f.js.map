{"version":3,"sources":["webpack:///src/extensions/49400c65fb00406fad003af31f1699c50c22e0ce2c330aefd1c0a9f470d299d2/generated-types.ts","webpack:///src/extensions/49400c65fb00406fad003af31f1699c50c22e0ce2c330aefd1c0a9f470d299d2/components/all-product-reviews-list/all-product-reviews-list.component.html","webpack:///src/extensions/49400c65fb00406fad003af31f1699c50c22e0ce2c330aefd1c0a9f470d299d2/components/all-product-reviews-list/all-product-reviews-list.component.ts","webpack:///src/extensions/49400c65fb00406fad003af31f1699c50c22e0ce2c330aefd1c0a9f470d299d2/components/product-review-detail/product-review-detail.graphql.ts","webpack:///src/extensions/49400c65fb00406fad003af31f1699c50c22e0ce2c330aefd1c0a9f470d299d2/components/product-review-detail/product-review-detail.component.html","webpack:///src/extensions/49400c65fb00406fad003af31f1699c50c22e0ce2c330aefd1c0a9f470d299d2/components/product-review-detail/product-review-detail.component.ts","webpack:///src/extensions/49400c65fb00406fad003af31f1699c50c22e0ce2c330aefd1c0a9f470d299d2/components/product-reviews-list/product-reviews-list.graphql.ts","webpack:///src/extensions/49400c65fb00406fad003af31f1699c50c22e0ce2c330aefd1c0a9f470d299d2/components/review-histogram/review-histogram.component.html","webpack:///src/extensions/49400c65fb00406fad003af31f1699c50c22e0ce2c330aefd1c0a9f470d299d2/components/review-histogram/review-histogram.component.ts","webpack:///src/extensions/49400c65fb00406fad003af31f1699c50c22e0ce2c330aefd1c0a9f470d299d2/components/product-reviews-list/product-reviews-list.component.html","webpack:///src/extensions/49400c65fb00406fad003af31f1699c50c22e0ce2c330aefd1c0a9f470d299d2/components/product-reviews-list/product-reviews-list.component.ts","webpack:///src/extensions/49400c65fb00406fad003af31f1699c50c22e0ce2c330aefd1c0a9f470d299d2/providers/routing/product-reviews-resolver.graphql.ts","webpack:///src/extensions/49400c65fb00406fad003af31f1699c50c22e0ce2c330aefd1c0a9f470d299d2/providers/routing/product-reviews-resolver.ts","webpack:///src/extensions/49400c65fb00406fad003af31f1699c50c22e0ce2c330aefd1c0a9f470d299d2/providers/routing/review-detail-resolver.graphql.ts","webpack:///src/extensions/49400c65fb00406fad003af31f1699c50c22e0ce2c330aefd1c0a9f470d299d2/providers/routing/review-detail-resolver.ts","webpack:///src/extensions/49400c65fb00406fad003af31f1699c50c22e0ce2c330aefd1c0a9f470d299d2/reviews-ui-lazy.module.ts"],"names":["JobState","GlobalFlag","AdjustmentType","DeletionResult","Permission","SortOrder","ErrorCode","LogicalOperator","CurrencyCode","LanguageCode","AssetType","HistoryEntryType","StockMovementType","Pending","Running","Completed","Retrying","Failed","True","False","Inherit","Tax","Promotion","Shipping","Refund","TaxRefund","PromotionRefund","ShippingRefund","Deleted","NotDeleted","Authenticated","SuperAdmin","Owner","Public","CreateCatalog","ReadCatalog","UpdateCatalog","DeleteCatalog","CreateCustomer","ReadCustomer","UpdateCustomer","DeleteCustomer","CreateAdministrator","ReadAdministrator","UpdateAdministrator","DeleteAdministrator","CreateOrder","ReadOrder","UpdateOrder","DeleteOrder","CreatePromotion","ReadPromotion","UpdatePromotion","DeletePromotion","CreateSettings","ReadSettings","UpdateSettings","DeleteSettings","Asc","Desc","UnknownError","MimeTypeError","LanguageNotAvailableError","ChannelDefaultLanguageError","SettlePaymentError","EmptyOrderLineSelectionError","ItemsAlreadyFulfilledError","InsufficientStockOnHandError","MultipleOrderError","CancelActiveOrderError","PaymentOrderMismatchError","RefundOrderStateError","NothingToRefundError","AlreadyRefundedError","QuantityTooGreatError","RefundStateTransitionError","PaymentStateTransitionError","FulfillmentStateTransitionError","ProductOptionInUseError","MissingConditionsError","NativeAuthStrategyError","InvalidCredentialsError","OrderStateTransitionError","EmailAddressConflictError","And","Or","Aed","Afn","All","Amd","Ang","Aoa","Ars","Aud","Awg","Azn","Bam","Bbd","Bdt","Bgn","Bhd","Bif","Bmd","Bnd","Bob","Brl","Bsd","Btn","Bwp","Byn","Bzd","Cad","Cdf","Chf","Clp","Cny","Cop","Crc","Cuc","Cup","Cve","Czk","Djf","Dkk","Dop","Dzd","Egp","Ern","Etb","Eur","Fjd","Fkp","Gbp","Gel","Ghs","Gip","Gmd","Gnf","Gtq","Gyd","Hkd","Hnl","Hrk","Htg","Huf","Idr","Ils","Inr","Iqd","Irr","Isk","Jmd","Jod","Jpy","Kes","Kgs","Khr","Kmf","Kpw","Krw","Kwd","Kyd","Kzt","Lak","Lbp","Lkr","Lrd","Lsl","Lyd","Mad","Mdl","Mga","Mkd","Mmk","Mnt","Mop","Mru","Mur","Mvr","Mwk","Mxn","Myr","Mzn","Nad","Ngn","Nio","Nok","Npr","Nzd","Omr","Pab","Pen","Pgk","Php","Pkr","Pln","Pyg","Qar","Ron","Rsd","Rub","Rwf","Sar","Sbd","Scr","Sdg","Sek","Sgd","Shp","Sll","Sos","Srd","Ssp","Stn","Svc","Syp","Szl","Thb","Tjs","Tmt","Tnd","Top","Try","Ttd","Twd","Tzs","Uah","Ugx","Usd","Uyu","Uzs","Ves","Vnd","Vuv","Wst","Xaf","Xcd","Xof","Xpf","Yer","Zar","Zmw","Zwl","Af","Ak","Sq","Am","Ar","Hy","As","Az","Bm","Bn","Eu","Be","Bs","Br","Bg","My","Ca","Ce","Zh","ZhHans","ZhHant","Cu","Kw","Co","Hr","Cs","Da","Nl","NlBe","Dz","En","EnAu","EnCa","EnGb","EnUs","Eo","Et","Ee","Fo","Fi","Fr","FrCa","FrCh","Ff","Gl","Lg","Ka","De","DeAt","DeCh","El","Gu","Ht","Ha","He","Hi","Hu","Is","Ig","Id","Ia","Ga","It","Ja","Jv","Kl","Kn","Ks","Kk","Km","Ki","Rw","Ko","Ku","Ky","Lo","La","Lv","Ln","Lt","Lu","Lb","Mk","Mg","Ms","Ml","Mt","Gv","Mi","Mr","Mn","Ne","Nd","Se","Nb","Nn","Ny","Om","Os","Ps","Fa","FaAf","Pl","Pt","PtBr","PtPt","Pa","Qu","Ro","RoMd","Rm","Rn","Ru","Sm","Sg","Sa","Gd","Sr","Sn","Ii","Sd","Si","Sk","Sl","So","St","Es","EsEs","EsMx","Su","Sw","SwCd","Sv","Tg","Ta","Tt","Te","Th","Bo","Ti","To","Tr","Tk","Uk","Ur","Ug","Uz","Vi","Vo","Cy","Fy","Wo","Xh","Yi","Yo","Zu","Image","Video","Binary","CustomerRegistered","CustomerVerified","CustomerDetailUpdated","CustomerAddedToGroup","CustomerRemovedFromGroup","CustomerAddressCreated","CustomerAddressUpdated","CustomerAddressDeleted","CustomerPasswordUpdated","CustomerPasswordResetRequested","CustomerPasswordResetVerified","CustomerEmailUpdateRequested","CustomerEmailUpdateVerified","CustomerNote","OrderStateTransition","OrderPaymentTransition","OrderFulfillment","OrderCancellation","OrderRefundTransition","OrderFulfillmentTransition","OrderNote","OrderCouponApplied","OrderCouponRemoved","Adjustment","Allocation","Release","Sale","Cancellation","Return","dataService","router","route","super","filteredState","setQueryFn","args","this","query","data","productReviews","skip","take","productId","snapshot","paramMap","get","options","sort","createdAt","filter","state","eq","refresh","setPageNumber","setItemsPerPage","UPDATE_REVIEW","APPROVE_REVIEW","REJECT_REVIEW","serverConfigService","formBuilder","changeDetector","notificationService","detailForm","group","summary","required","body","rating","authorName","authorLocation","response","init","reviewState$","entity$","pipe","map","review","saveChanges","switchMap","mutate","id","subscribe","markAsPristine","markForCheck","success","error","result","entity","dirty","formValue","value","input","mapTo","of","patchValue","GET_REVIEWS_FOR_PRODUCT","GET_PRODUCT_PREVIEW_AND_HISTOGRAM","binData","filterChange","bins","filteredBin","max","Math","d","frequency","bin","find","round","emit","product","reviews","filteredRating","ngOnInit","productWithHistogram$","single$","shareReplay","histogramBinData$","reviewsHistogram","product$","applyRatingFilters","GET_PRODUCT_NAME","mapSingle","GET_REVIEW","stream","mapStream","productReview","ReviewsUiLazyModule","productReviewsBreadcrumb","resolved","params","label","link","name","reviewDetailBreadcrumb","forChild","path","component","resolve","breadcrumb","pathMatch"],"mappings":"+QAiwCYA,EAspBAC,EAMAC,EA+CAC,EAcAC,EAoFAC,EAKAC,EAqEAC,EA0GAC,EAkbAC,EA6XAC,EAiMAC,EAiWAC,E,qCAlzEZ,SAAYZ,GACV,EAAAa,QAAA,UACA,EAAAC,QAAA,UACA,EAAAC,UAAA,YACA,EAAAC,SAAA,WACA,EAAAC,OAAA,SALF,CAAYjB,MAAQ,KAspBpB,SAAYC,GACV,EAAAiB,KAAA,OACA,EAAAC,MAAA,QACA,EAAAC,QAAA,UAHF,CAAYnB,MAAU,KAMtB,SAAYC,GACV,EAAAmB,IAAA,MACA,EAAAC,UAAA,YACA,EAAAC,SAAA,WACA,EAAAC,OAAA,SACA,EAAAC,UAAA,aACA,EAAAC,gBAAA,mBACA,EAAAC,eAAA,kBAPF,CAAYzB,MAAc,KA+C1B,SAAYC,GAEV,EAAAyB,QAAA,UAEA,EAAAC,WAAA,cAJF,CAAY1B,MAAc,KAc1B,SAAYC,GAEV,EAAA0B,cAAA,gBAEA,EAAAC,WAAA,aAEA,EAAAC,MAAA,QAEA,EAAAC,OAAA,SAEA,EAAAC,cAAA,gBAEA,EAAAC,YAAA,cAEA,EAAAC,cAAA,gBAEA,EAAAC,cAAA,gBAEA,EAAAC,eAAA,iBAEA,EAAAC,aAAA,eAEA,EAAAC,eAAA,iBAEA,EAAAC,eAAA,iBAEA,EAAAC,oBAAA,sBAEA,EAAAC,kBAAA,oBAEA,EAAAC,oBAAA,sBAEA,EAAAC,oBAAA,sBAEA,EAAAC,YAAA,cAEA,EAAAC,UAAA,YAEA,EAAAC,YAAA,cAEA,EAAAC,YAAA,cAEA,EAAAC,gBAAA,kBAEA,EAAAC,cAAA,gBAEA,EAAAC,gBAAA,kBAEA,EAAAC,gBAAA,kBAEA,EAAAC,eAAA,iBAEA,EAAAC,aAAA,eAEA,EAAAC,eAAA,iBAEA,EAAAC,eAAA,iBAxDF,CAAYrD,MAAU,KAoFtB,SAAYC,GACV,EAAAqD,IAAA,MACA,EAAAC,KAAA,OAFF,CAAYtD,MAAS,KAKrB,SAAYC,GACV,EAAAsD,aAAA,gBACA,EAAAC,cAAA,kBACA,EAAAC,0BAAA,+BACA,EAAAC,4BAAA,iCACA,EAAAC,mBAAA,uBACA,EAAAC,6BAAA,mCACA,EAAAC,2BAAA,gCACA,EAAAC,6BAAA,mCACA,EAAAC,mBAAA,uBACA,EAAAC,uBAAA,4BACA,EAAAC,0BAAA,+BACA,EAAAC,sBAAA,2BACA,EAAAC,qBAAA,0BACA,EAAAC,qBAAA,yBACA,EAAAC,sBAAA,2BACA,EAAAC,2BAAA,gCACA,EAAAC,4BAAA,iCACA,EAAAC,gCAAA,qCACA,EAAAC,wBAAA,8BACA,EAAAC,uBAAA,2BACA,EAAAC,wBAAA,6BACA,EAAAC,wBAAA,4BACA,EAAAC,0BAAA,+BACA,EAAAC,0BAAA,+BAxBF,CAAY7E,MAAS,KAqErB,SAAYC,GACV,EAAA6E,IAAA,MACA,EAAAC,GAAA,KAFF,CAAY9E,MAAe,KA0G3B,SAAYC,GAEV,EAAA8E,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MAEA,EAAAC,IAAA,MA1TF,CAAY1O,MAAY,KAkbxB,SAAYC,GAEV,EAAA0O,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,OAAA,UAEA,EAAAC,OAAA,UAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,KAAA,QAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,KAAA,QAEA,EAAAC,KAAA,QAEA,EAAAC,KAAA,QAEA,EAAAC,KAAA,QAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,KAAA,QAEA,EAAAC,KAAA,QAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,KAAA,QAEA,EAAAC,KAAA,QAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAA9P,GAAA,KAEA,EAAA+P,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,KAAA,QAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,KAAA,QAEA,EAAAC,KAAA,QAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,KAAA,QAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,K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","file":"x","sourcesContent":["/* eslint-disable */\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */\n  JSON: any;\n  /** A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar. */\n  DateTime: any;\n  /** The `Upload` scalar type represents a file upload. */\n  Upload: any;\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  administrators: AdministratorList;\n  administrator?: Maybe<Administrator>;\n  /** Get a list of Assets */\n  assets: AssetList;\n  /** Get a single Asset by id */\n  asset?: Maybe<Asset>;\n  me?: Maybe<CurrentUser>;\n  channels: Array<Channel>;\n  channel?: Maybe<Channel>;\n  activeChannel: Channel;\n  collections: CollectionList;\n  /** Get a Collection either by id or slug. If neither id nor slug is speicified, an error will result. */\n  collection?: Maybe<Collection>;\n  collectionFilters: Array<ConfigurableOperationDefinition>;\n  countries: CountryList;\n  country?: Maybe<Country>;\n  customerGroups: CustomerGroupList;\n  customerGroup?: Maybe<CustomerGroup>;\n  customers: CustomerList;\n  customer?: Maybe<Customer>;\n  facets: FacetList;\n  facet?: Maybe<Facet>;\n  globalSettings: GlobalSettings;\n  job?: Maybe<Job>;\n  jobs: JobList;\n  jobsById: Array<Job>;\n  jobQueues: Array<JobQueue>;\n  order?: Maybe<Order>;\n  orders: OrderList;\n  paymentMethods: PaymentMethodList;\n  paymentMethod?: Maybe<PaymentMethod>;\n  productOptionGroups: Array<ProductOptionGroup>;\n  productOptionGroup?: Maybe<ProductOptionGroup>;\n  search: SearchResponse;\n  products: ProductList;\n  /** Get a Product either by id or slug. If neither id nor slug is speicified, an error will result. */\n  product?: Maybe<Product>;\n  /** Get a ProductVariant by id */\n  productVariant?: Maybe<ProductVariant>;\n  promotion?: Maybe<Promotion>;\n  promotions: PromotionList;\n  promotionConditions: Array<ConfigurableOperationDefinition>;\n  promotionActions: Array<ConfigurableOperationDefinition>;\n  roles: RoleList;\n  role?: Maybe<Role>;\n  shippingMethods: ShippingMethodList;\n  shippingMethod?: Maybe<ShippingMethod>;\n  shippingEligibilityCheckers: Array<ConfigurableOperationDefinition>;\n  shippingCalculators: Array<ConfigurableOperationDefinition>;\n  testShippingMethod: TestShippingMethodResult;\n  testEligibleShippingMethods: Array<ShippingMethodQuote>;\n  taxCategories: Array<TaxCategory>;\n  taxCategory?: Maybe<TaxCategory>;\n  taxRates: TaxRateList;\n  taxRate?: Maybe<TaxRate>;\n  zones: Array<Zone>;\n  zone?: Maybe<Zone>;\n  productReviews: ProductReviewList;\n  productReview?: Maybe<ProductReview>;\n};\n\n\nexport type QueryAdministratorsArgs = {\n  options?: Maybe<AdministratorListOptions>;\n};\n\n\nexport type QueryAdministratorArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryAssetsArgs = {\n  options?: Maybe<AssetListOptions>;\n};\n\n\nexport type QueryAssetArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryChannelArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryCollectionsArgs = {\n  options?: Maybe<CollectionListOptions>;\n};\n\n\nexport type QueryCollectionArgs = {\n  id?: Maybe<Scalars['ID']>;\n  slug?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryCountriesArgs = {\n  options?: Maybe<CountryListOptions>;\n};\n\n\nexport type QueryCountryArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryCustomerGroupsArgs = {\n  options?: Maybe<CustomerGroupListOptions>;\n};\n\n\nexport type QueryCustomerGroupArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryCustomersArgs = {\n  options?: Maybe<CustomerListOptions>;\n};\n\n\nexport type QueryCustomerArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryFacetsArgs = {\n  options?: Maybe<FacetListOptions>;\n};\n\n\nexport type QueryFacetArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryJobArgs = {\n  jobId: Scalars['ID'];\n};\n\n\nexport type QueryJobsArgs = {\n  options?: Maybe<JobListOptions>;\n};\n\n\nexport type QueryJobsByIdArgs = {\n  jobIds: Array<Scalars['ID']>;\n};\n\n\nexport type QueryOrderArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryOrdersArgs = {\n  options?: Maybe<OrderListOptions>;\n};\n\n\nexport type QueryPaymentMethodsArgs = {\n  options?: Maybe<PaymentMethodListOptions>;\n};\n\n\nexport type QueryPaymentMethodArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryProductOptionGroupsArgs = {\n  filterTerm?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryProductOptionGroupArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QuerySearchArgs = {\n  input: SearchInput;\n};\n\n\nexport type QueryProductsArgs = {\n  options?: Maybe<ProductListOptions>;\n};\n\n\nexport type QueryProductArgs = {\n  id?: Maybe<Scalars['ID']>;\n  slug?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryProductVariantArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryPromotionArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryPromotionsArgs = {\n  options?: Maybe<PromotionListOptions>;\n};\n\n\nexport type QueryRolesArgs = {\n  options?: Maybe<RoleListOptions>;\n};\n\n\nexport type QueryRoleArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryShippingMethodsArgs = {\n  options?: Maybe<ShippingMethodListOptions>;\n};\n\n\nexport type QueryShippingMethodArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryTestShippingMethodArgs = {\n  input: TestShippingMethodInput;\n};\n\n\nexport type QueryTestEligibleShippingMethodsArgs = {\n  input: TestEligibleShippingMethodsInput;\n};\n\n\nexport type QueryTaxCategoryArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryTaxRatesArgs = {\n  options?: Maybe<TaxRateListOptions>;\n};\n\n\nexport type QueryTaxRateArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryZoneArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryProductReviewsArgs = {\n  options?: Maybe<ProductReviewListOptions>;\n};\n\n\nexport type QueryProductReviewArgs = {\n  id: Scalars['ID'];\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  /** Create a new Administrator */\n  createAdministrator: Administrator;\n  /** Update an existing Administrator */\n  updateAdministrator: Administrator;\n  /** Delete an Administrator */\n  deleteAdministrator: DeletionResponse;\n  /** Assign a Role to an Administrator */\n  assignRoleToAdministrator: Administrator;\n  /** Create a new Asset */\n  createAssets: Array<CreateAssetResult>;\n  /** Update an existing Asset */\n  updateAsset: Asset;\n  /** Delete an Asset */\n  deleteAsset: DeletionResponse;\n  /** Delete multiple Assets */\n  deleteAssets: DeletionResponse;\n  /** Authenticates the user using the native authentication strategy. This mutation is an alias for `authenticate({ native: { ... }})` */\n  login: NativeAuthenticationResult;\n  /** Authenticates the user using a named authentication strategy */\n  authenticate: AuthenticationResult;\n  logout: Success;\n  /** Create a new Channel */\n  createChannel: CreateChannelResult;\n  /** Update an existing Channel */\n  updateChannel: UpdateChannelResult;\n  /** Delete a Channel */\n  deleteChannel: DeletionResponse;\n  /** Create a new Collection */\n  createCollection: Collection;\n  /** Update an existing Collection */\n  updateCollection: Collection;\n  /** Delete a Collection and all of its descendants */\n  deleteCollection: DeletionResponse;\n  /** Move a Collection to a different parent or index */\n  moveCollection: Collection;\n  /** Create a new Country */\n  createCountry: Country;\n  /** Update an existing Country */\n  updateCountry: Country;\n  /** Delete a Country */\n  deleteCountry: DeletionResponse;\n  /** Create a new CustomerGroup */\n  createCustomerGroup: CustomerGroup;\n  /** Update an existing CustomerGroup */\n  updateCustomerGroup: CustomerGroup;\n  /** Delete a CustomerGroup */\n  deleteCustomerGroup: DeletionResponse;\n  /** Add Customers to a CustomerGroup */\n  addCustomersToGroup: CustomerGroup;\n  /** Remove Customers from a CustomerGroup */\n  removeCustomersFromGroup: CustomerGroup;\n  /** Create a new Customer. If a password is provided, a new User will also be created an linked to the Customer. */\n  createCustomer: CreateCustomerResult;\n  /** Update an existing Customer */\n  updateCustomer: UpdateCustomerResult;\n  /** Delete a Customer */\n  deleteCustomer: DeletionResponse;\n  /** Create a new Address and associate it with the Customer specified by customerId */\n  createCustomerAddress: Address;\n  /** Update an existing Address */\n  updateCustomerAddress: Address;\n  /** Update an existing Address */\n  deleteCustomerAddress: Success;\n  addNoteToCustomer: Customer;\n  updateCustomerNote: HistoryEntry;\n  deleteCustomerNote: DeletionResponse;\n  /** Create a new Facet */\n  createFacet: Facet;\n  /** Update an existing Facet */\n  updateFacet: Facet;\n  /** Delete an existing Facet */\n  deleteFacet: DeletionResponse;\n  /** Create one or more FacetValues */\n  createFacetValues: Array<FacetValue>;\n  /** Update one or more FacetValues */\n  updateFacetValues: Array<FacetValue>;\n  /** Delete one or more FacetValues */\n  deleteFacetValues: Array<DeletionResponse>;\n  updateGlobalSettings: UpdateGlobalSettingsResult;\n  importProducts?: Maybe<ImportInfo>;\n  /** Remove all settled jobs in the given queues olfer than the given date. Returns the number of jobs deleted. */\n  removeSettledJobs: Scalars['Int'];\n  settlePayment: SettlePaymentResult;\n  addFulfillmentToOrder: AddFulfillmentToOrderResult;\n  cancelOrder: CancelOrderResult;\n  refundOrder: RefundOrderResult;\n  settleRefund: SettleRefundResult;\n  addNoteToOrder: Order;\n  updateOrderNote: HistoryEntry;\n  deleteOrderNote: DeletionResponse;\n  transitionOrderToState?: Maybe<TransitionOrderToStateResult>;\n  transitionFulfillmentToState: TransitionFulfillmentToStateResult;\n  setOrderCustomFields?: Maybe<Order>;\n  /** Update an existing PaymentMethod */\n  updatePaymentMethod: PaymentMethod;\n  /** Create a new ProductOptionGroup */\n  createProductOptionGroup: ProductOptionGroup;\n  /** Update an existing ProductOptionGroup */\n  updateProductOptionGroup: ProductOptionGroup;\n  /** Create a new ProductOption within a ProductOptionGroup */\n  createProductOption: ProductOption;\n  /** Create a new ProductOption within a ProductOptionGroup */\n  updateProductOption: ProductOption;\n  reindex: Job;\n  /** Create a new Product */\n  createProduct: Product;\n  /** Update an existing Product */\n  updateProduct: Product;\n  /** Delete a Product */\n  deleteProduct: DeletionResponse;\n  /** Add an OptionGroup to a Product */\n  addOptionGroupToProduct: Product;\n  /** Remove an OptionGroup from a Product */\n  removeOptionGroupFromProduct: RemoveOptionGroupFromProductResult;\n  /** Create a set of ProductVariants based on the OptionGroups assigned to the given Product */\n  createProductVariants: Array<Maybe<ProductVariant>>;\n  /** Update existing ProductVariants */\n  updateProductVariants: Array<Maybe<ProductVariant>>;\n  /** Delete a ProductVariant */\n  deleteProductVariant: DeletionResponse;\n  /** Assigns Products to the specified Channel */\n  assignProductsToChannel: Array<Product>;\n  /** Removes Products from the specified Channel */\n  removeProductsFromChannel: Array<Product>;\n  createPromotion: CreatePromotionResult;\n  updatePromotion: UpdatePromotionResult;\n  deletePromotion: DeletionResponse;\n  /** Create a new Role */\n  createRole: Role;\n  /** Update an existing Role */\n  updateRole: Role;\n  /** Delete an existing Role */\n  deleteRole: DeletionResponse;\n  /** Create a new ShippingMethod */\n  createShippingMethod: ShippingMethod;\n  /** Update an existing ShippingMethod */\n  updateShippingMethod: ShippingMethod;\n  /** Delete a ShippingMethod */\n  deleteShippingMethod: DeletionResponse;\n  /** Create a new TaxCategory */\n  createTaxCategory: TaxCategory;\n  /** Update an existing TaxCategory */\n  updateTaxCategory: TaxCategory;\n  /** Deletes a TaxCategory */\n  deleteTaxCategory: DeletionResponse;\n  /** Create a new TaxRate */\n  createTaxRate: TaxRate;\n  /** Update an existing TaxRate */\n  updateTaxRate: TaxRate;\n  /** Delete a TaxRate */\n  deleteTaxRate: DeletionResponse;\n  /** Create a new Zone */\n  createZone: Zone;\n  /** Update an existing Zone */\n  updateZone: Zone;\n  /** Delete a Zone */\n  deleteZone: DeletionResponse;\n  /** Add members to a Zone */\n  addMembersToZone: Zone;\n  /** Remove members from a Zone */\n  removeMembersFromZone: Zone;\n  updateProductReview: ProductReview;\n  approveProductReview?: Maybe<ProductReview>;\n  rejectProductReview?: Maybe<ProductReview>;\n};\n\n\nexport type MutationCreateAdministratorArgs = {\n  input: CreateAdministratorInput;\n};\n\n\nexport type MutationUpdateAdministratorArgs = {\n  input: UpdateAdministratorInput;\n};\n\n\nexport type MutationDeleteAdministratorArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationAssignRoleToAdministratorArgs = {\n  administratorId: Scalars['ID'];\n  roleId: Scalars['ID'];\n};\n\n\nexport type MutationCreateAssetsArgs = {\n  input: Array<CreateAssetInput>;\n};\n\n\nexport type MutationUpdateAssetArgs = {\n  input: UpdateAssetInput;\n};\n\n\nexport type MutationDeleteAssetArgs = {\n  id: Scalars['ID'];\n  force?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type MutationDeleteAssetsArgs = {\n  ids: Array<Scalars['ID']>;\n  force?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type MutationLoginArgs = {\n  username: Scalars['String'];\n  password: Scalars['String'];\n  rememberMe?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type MutationAuthenticateArgs = {\n  input: AuthenticationInput;\n  rememberMe?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type MutationCreateChannelArgs = {\n  input: CreateChannelInput;\n};\n\n\nexport type MutationUpdateChannelArgs = {\n  input: UpdateChannelInput;\n};\n\n\nexport type MutationDeleteChannelArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationCreateCollectionArgs = {\n  input: CreateCollectionInput;\n};\n\n\nexport type MutationUpdateCollectionArgs = {\n  input: UpdateCollectionInput;\n};\n\n\nexport type MutationDeleteCollectionArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationMoveCollectionArgs = {\n  input: MoveCollectionInput;\n};\n\n\nexport type MutationCreateCountryArgs = {\n  input: CreateCountryInput;\n};\n\n\nexport type MutationUpdateCountryArgs = {\n  input: UpdateCountryInput;\n};\n\n\nexport type MutationDeleteCountryArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationCreateCustomerGroupArgs = {\n  input: CreateCustomerGroupInput;\n};\n\n\nexport type MutationUpdateCustomerGroupArgs = {\n  input: UpdateCustomerGroupInput;\n};\n\n\nexport type MutationDeleteCustomerGroupArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationAddCustomersToGroupArgs = {\n  customerGroupId: Scalars['ID'];\n  customerIds: Array<Scalars['ID']>;\n};\n\n\nexport type MutationRemoveCustomersFromGroupArgs = {\n  customerGroupId: Scalars['ID'];\n  customerIds: Array<Scalars['ID']>;\n};\n\n\nexport type MutationCreateCustomerArgs = {\n  input: CreateCustomerInput;\n  password?: Maybe<Scalars['String']>;\n};\n\n\nexport type MutationUpdateCustomerArgs = {\n  input: UpdateCustomerInput;\n};\n\n\nexport type MutationDeleteCustomerArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationCreateCustomerAddressArgs = {\n  customerId: Scalars['ID'];\n  input: CreateAddressInput;\n};\n\n\nexport type MutationUpdateCustomerAddressArgs = {\n  input: UpdateAddressInput;\n};\n\n\nexport type MutationDeleteCustomerAddressArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationAddNoteToCustomerArgs = {\n  input: AddNoteToCustomerInput;\n};\n\n\nexport type MutationUpdateCustomerNoteArgs = {\n  input: UpdateCustomerNoteInput;\n};\n\n\nexport type MutationDeleteCustomerNoteArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationCreateFacetArgs = {\n  input: CreateFacetInput;\n};\n\n\nexport type MutationUpdateFacetArgs = {\n  input: UpdateFacetInput;\n};\n\n\nexport type MutationDeleteFacetArgs = {\n  id: Scalars['ID'];\n  force?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type MutationCreateFacetValuesArgs = {\n  input: Array<CreateFacetValueInput>;\n};\n\n\nexport type MutationUpdateFacetValuesArgs = {\n  input: Array<UpdateFacetValueInput>;\n};\n\n\nexport type MutationDeleteFacetValuesArgs = {\n  ids: Array<Scalars['ID']>;\n  force?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type MutationUpdateGlobalSettingsArgs = {\n  input: UpdateGlobalSettingsInput;\n};\n\n\nexport type MutationImportProductsArgs = {\n  csvFile: Scalars['Upload'];\n};\n\n\nexport type MutationRemoveSettledJobsArgs = {\n  queueNames?: Maybe<Array<Scalars['String']>>;\n  olderThan?: Maybe<Scalars['DateTime']>;\n};\n\n\nexport type MutationSettlePaymentArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationAddFulfillmentToOrderArgs = {\n  input: FulfillOrderInput;\n};\n\n\nexport type MutationCancelOrderArgs = {\n  input: CancelOrderInput;\n};\n\n\nexport type MutationRefundOrderArgs = {\n  input: RefundOrderInput;\n};\n\n\nexport type MutationSettleRefundArgs = {\n  input: SettleRefundInput;\n};\n\n\nexport type MutationAddNoteToOrderArgs = {\n  input: AddNoteToOrderInput;\n};\n\n\nexport type MutationUpdateOrderNoteArgs = {\n  input: UpdateOrderNoteInput;\n};\n\n\nexport type MutationDeleteOrderNoteArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationTransitionOrderToStateArgs = {\n  id: Scalars['ID'];\n  state: Scalars['String'];\n};\n\n\nexport type MutationTransitionFulfillmentToStateArgs = {\n  id: Scalars['ID'];\n  state: Scalars['String'];\n};\n\n\nexport type MutationSetOrderCustomFieldsArgs = {\n  input: UpdateOrderInput;\n};\n\n\nexport type MutationUpdatePaymentMethodArgs = {\n  input: UpdatePaymentMethodInput;\n};\n\n\nexport type MutationCreateProductOptionGroupArgs = {\n  input: CreateProductOptionGroupInput;\n};\n\n\nexport type MutationUpdateProductOptionGroupArgs = {\n  input: UpdateProductOptionGroupInput;\n};\n\n\nexport type MutationCreateProductOptionArgs = {\n  input: CreateProductOptionInput;\n};\n\n\nexport type MutationUpdateProductOptionArgs = {\n  input: UpdateProductOptionInput;\n};\n\n\nexport type MutationCreateProductArgs = {\n  input: CreateProductInput;\n};\n\n\nexport type MutationUpdateProductArgs = {\n  input: UpdateProductInput;\n};\n\n\nexport type MutationDeleteProductArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationAddOptionGroupToProductArgs = {\n  productId: Scalars['ID'];\n  optionGroupId: Scalars['ID'];\n};\n\n\nexport type MutationRemoveOptionGroupFromProductArgs = {\n  productId: Scalars['ID'];\n  optionGroupId: Scalars['ID'];\n};\n\n\nexport type MutationCreateProductVariantsArgs = {\n  input: Array<CreateProductVariantInput>;\n};\n\n\nexport type MutationUpdateProductVariantsArgs = {\n  input: Array<UpdateProductVariantInput>;\n};\n\n\nexport type MutationDeleteProductVariantArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationAssignProductsToChannelArgs = {\n  input: AssignProductsToChannelInput;\n};\n\n\nexport type MutationRemoveProductsFromChannelArgs = {\n  input: RemoveProductsFromChannelInput;\n};\n\n\nexport type MutationCreatePromotionArgs = {\n  input: CreatePromotionInput;\n};\n\n\nexport type MutationUpdatePromotionArgs = {\n  input: UpdatePromotionInput;\n};\n\n\nexport type MutationDeletePromotionArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationCreateRoleArgs = {\n  input: CreateRoleInput;\n};\n\n\nexport type MutationUpdateRoleArgs = {\n  input: UpdateRoleInput;\n};\n\n\nexport type MutationDeleteRoleArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationCreateShippingMethodArgs = {\n  input: CreateShippingMethodInput;\n};\n\n\nexport type MutationUpdateShippingMethodArgs = {\n  input: UpdateShippingMethodInput;\n};\n\n\nexport type MutationDeleteShippingMethodArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationCreateTaxCategoryArgs = {\n  input: CreateTaxCategoryInput;\n};\n\n\nexport type MutationUpdateTaxCategoryArgs = {\n  input: UpdateTaxCategoryInput;\n};\n\n\nexport type MutationDeleteTaxCategoryArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationCreateTaxRateArgs = {\n  input: CreateTaxRateInput;\n};\n\n\nexport type MutationUpdateTaxRateArgs = {\n  input: UpdateTaxRateInput;\n};\n\n\nexport type MutationDeleteTaxRateArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationCreateZoneArgs = {\n  input: CreateZoneInput;\n};\n\n\nexport type MutationUpdateZoneArgs = {\n  input: UpdateZoneInput;\n};\n\n\nexport type MutationDeleteZoneArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationAddMembersToZoneArgs = {\n  zoneId: Scalars['ID'];\n  memberIds: Array<Scalars['ID']>;\n};\n\n\nexport type MutationRemoveMembersFromZoneArgs = {\n  zoneId: Scalars['ID'];\n  memberIds: Array<Scalars['ID']>;\n};\n\n\nexport type MutationUpdateProductReviewArgs = {\n  input: UpdateProductReviewInput;\n};\n\n\nexport type MutationApproveProductReviewArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationRejectProductReviewArgs = {\n  id: Scalars['ID'];\n};\n\nexport type CreateAdministratorInput = {\n  firstName: Scalars['String'];\n  lastName: Scalars['String'];\n  emailAddress: Scalars['String'];\n  password: Scalars['String'];\n  roleIds: Array<Scalars['ID']>;\n};\n\nexport type UpdateAdministratorInput = {\n  id: Scalars['ID'];\n  firstName?: Maybe<Scalars['String']>;\n  lastName?: Maybe<Scalars['String']>;\n  emailAddress?: Maybe<Scalars['String']>;\n  password?: Maybe<Scalars['String']>;\n  roleIds?: Maybe<Array<Scalars['ID']>>;\n};\n\nexport type MimeTypeError = ErrorResult & {\n  __typename?: 'MimeTypeError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n  fileName: Scalars['String'];\n  mimeType: Scalars['String'];\n};\n\nexport type CreateAssetResult = Asset | MimeTypeError;\n\nexport type CreateAssetInput = {\n  file: Scalars['Upload'];\n};\n\nexport type CoordinateInput = {\n  x: Scalars['Float'];\n  y: Scalars['Float'];\n};\n\nexport type UpdateAssetInput = {\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  focalPoint?: Maybe<CoordinateInput>;\n};\n\nexport type NativeAuthenticationResult = CurrentUser | InvalidCredentialsError | NativeAuthStrategyError;\n\nexport type AuthenticationResult = CurrentUser | InvalidCredentialsError;\n\nexport type CreateChannelInput = {\n  code: Scalars['String'];\n  token: Scalars['String'];\n  defaultLanguageCode: LanguageCode;\n  pricesIncludeTax: Scalars['Boolean'];\n  currencyCode: CurrencyCode;\n  defaultTaxZoneId: Scalars['ID'];\n  defaultShippingZoneId: Scalars['ID'];\n};\n\nexport type UpdateChannelInput = {\n  id: Scalars['ID'];\n  code?: Maybe<Scalars['String']>;\n  token?: Maybe<Scalars['String']>;\n  defaultLanguageCode?: Maybe<LanguageCode>;\n  pricesIncludeTax?: Maybe<Scalars['Boolean']>;\n  currencyCode?: Maybe<CurrencyCode>;\n  defaultTaxZoneId?: Maybe<Scalars['ID']>;\n  defaultShippingZoneId?: Maybe<Scalars['ID']>;\n};\n\n/** Returned if attempting to set a Channel's defaultLanguageCode to a language which is not enabled in GlobalSettings */\nexport type LanguageNotAvailableError = ErrorResult & {\n  __typename?: 'LanguageNotAvailableError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n  languageCode: Scalars['String'];\n};\n\nexport type CreateChannelResult = Channel | LanguageNotAvailableError;\n\nexport type UpdateChannelResult = Channel | LanguageNotAvailableError;\n\nexport type Collection = Node & {\n  __typename?: 'Collection';\n  isPrivate: Scalars['Boolean'];\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode?: Maybe<LanguageCode>;\n  name: Scalars['String'];\n  slug: Scalars['String'];\n  breadcrumbs: Array<CollectionBreadcrumb>;\n  position: Scalars['Int'];\n  description: Scalars['String'];\n  featuredAsset?: Maybe<Asset>;\n  assets: Array<Asset>;\n  parent?: Maybe<Collection>;\n  children?: Maybe<Array<Collection>>;\n  filters: Array<ConfigurableOperation>;\n  translations: Array<CollectionTranslation>;\n  productVariants: ProductVariantList;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type CollectionProductVariantsArgs = {\n  options?: Maybe<ProductVariantListOptions>;\n};\n\nexport type MoveCollectionInput = {\n  collectionId: Scalars['ID'];\n  parentId: Scalars['ID'];\n  index: Scalars['Int'];\n};\n\nexport type CreateCollectionTranslationInput = {\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  slug: Scalars['String'];\n  description: Scalars['String'];\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type UpdateCollectionTranslationInput = {\n  id?: Maybe<Scalars['ID']>;\n  languageCode: LanguageCode;\n  name?: Maybe<Scalars['String']>;\n  slug?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type CreateCollectionInput = {\n  isPrivate?: Maybe<Scalars['Boolean']>;\n  featuredAssetId?: Maybe<Scalars['ID']>;\n  assetIds?: Maybe<Array<Scalars['ID']>>;\n  parentId?: Maybe<Scalars['ID']>;\n  filters: Array<ConfigurableOperationInput>;\n  translations: Array<CreateCollectionTranslationInput>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type UpdateCollectionInput = {\n  id: Scalars['ID'];\n  isPrivate?: Maybe<Scalars['Boolean']>;\n  featuredAssetId?: Maybe<Scalars['ID']>;\n  parentId?: Maybe<Scalars['ID']>;\n  assetIds?: Maybe<Array<Scalars['ID']>>;\n  filters?: Maybe<Array<ConfigurableOperationInput>>;\n  translations?: Maybe<Array<UpdateCollectionTranslationInput>>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type CountryTranslationInput = {\n  id?: Maybe<Scalars['ID']>;\n  languageCode: LanguageCode;\n  name?: Maybe<Scalars['String']>;\n};\n\nexport type CreateCountryInput = {\n  code: Scalars['String'];\n  translations: Array<CountryTranslationInput>;\n  enabled: Scalars['Boolean'];\n};\n\nexport type UpdateCountryInput = {\n  id: Scalars['ID'];\n  code?: Maybe<Scalars['String']>;\n  translations?: Maybe<Array<CountryTranslationInput>>;\n  enabled?: Maybe<Scalars['Boolean']>;\n};\n\nexport type CustomerGroupList = PaginatedList & {\n  __typename?: 'CustomerGroupList';\n  items: Array<CustomerGroup>;\n  totalItems: Scalars['Int'];\n};\n\nexport type CreateCustomerGroupInput = {\n  name: Scalars['String'];\n  customerIds?: Maybe<Array<Scalars['ID']>>;\n};\n\nexport type UpdateCustomerGroupInput = {\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n};\n\nexport type Customer = Node & {\n  __typename?: 'Customer';\n  groups: Array<CustomerGroup>;\n  history: HistoryEntryList;\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  title?: Maybe<Scalars['String']>;\n  firstName: Scalars['String'];\n  lastName: Scalars['String'];\n  phoneNumber?: Maybe<Scalars['String']>;\n  emailAddress: Scalars['String'];\n  addresses?: Maybe<Array<Address>>;\n  orders: OrderList;\n  user?: Maybe<User>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type CustomerHistoryArgs = {\n  options?: Maybe<HistoryEntryListOptions>;\n};\n\n\nexport type CustomerOrdersArgs = {\n  options?: Maybe<OrderListOptions>;\n};\n\nexport type UpdateCustomerInput = {\n  id: Scalars['ID'];\n  title?: Maybe<Scalars['String']>;\n  firstName?: Maybe<Scalars['String']>;\n  lastName?: Maybe<Scalars['String']>;\n  phoneNumber?: Maybe<Scalars['String']>;\n  emailAddress?: Maybe<Scalars['String']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type AddNoteToCustomerInput = {\n  id: Scalars['ID'];\n  note: Scalars['String'];\n  isPublic: Scalars['Boolean'];\n};\n\nexport type UpdateCustomerNoteInput = {\n  noteId: Scalars['ID'];\n  note: Scalars['String'];\n};\n\nexport type CreateCustomerResult = Customer | EmailAddressConflictError;\n\nexport type UpdateCustomerResult = Customer | EmailAddressConflictError;\n\nexport type Facet = Node & {\n  __typename?: 'Facet';\n  isPrivate: Scalars['Boolean'];\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  code: Scalars['String'];\n  values: Array<FacetValue>;\n  translations: Array<FacetTranslation>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type FacetTranslationInput = {\n  id?: Maybe<Scalars['ID']>;\n  languageCode: LanguageCode;\n  name?: Maybe<Scalars['String']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type CreateFacetInput = {\n  code: Scalars['String'];\n  isPrivate: Scalars['Boolean'];\n  translations: Array<FacetTranslationInput>;\n  values?: Maybe<Array<CreateFacetValueWithFacetInput>>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type UpdateFacetInput = {\n  id: Scalars['ID'];\n  isPrivate?: Maybe<Scalars['Boolean']>;\n  code?: Maybe<Scalars['String']>;\n  translations?: Maybe<Array<FacetTranslationInput>>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type FacetValueTranslationInput = {\n  id?: Maybe<Scalars['ID']>;\n  languageCode: LanguageCode;\n  name?: Maybe<Scalars['String']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type CreateFacetValueWithFacetInput = {\n  code: Scalars['String'];\n  translations: Array<FacetValueTranslationInput>;\n};\n\nexport type CreateFacetValueInput = {\n  facetId: Scalars['ID'];\n  code: Scalars['String'];\n  translations: Array<FacetValueTranslationInput>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type UpdateFacetValueInput = {\n  id: Scalars['ID'];\n  code?: Maybe<Scalars['String']>;\n  translations?: Maybe<Array<FacetValueTranslationInput>>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type Fulfillment = Node & {\n  __typename?: 'Fulfillment';\n  nextStates: Array<Scalars['String']>;\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  orderItems: Array<OrderItem>;\n  state: Scalars['String'];\n  method: Scalars['String'];\n  trackingCode?: Maybe<Scalars['String']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type UpdateGlobalSettingsInput = {\n  availableLanguages?: Maybe<Array<LanguageCode>>;\n  trackInventory?: Maybe<Scalars['Boolean']>;\n  outOfStockThreshold?: Maybe<Scalars['Int']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\n/**\n * Returned when the default LanguageCode of a Channel is no longer found in the `availableLanguages`\n * of the GlobalSettings\n */\nexport type ChannelDefaultLanguageError = ErrorResult & {\n  __typename?: 'ChannelDefaultLanguageError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n  language: Scalars['String'];\n  channelCode: Scalars['String'];\n};\n\nexport type UpdateGlobalSettingsResult = GlobalSettings | ChannelDefaultLanguageError;\n\n/**\n * @description\n * The state of a Job in the JobQueue\n * \n * @docsCategory common\n */\nexport enum JobState {\n  Pending = 'PENDING',\n  Running = 'RUNNING',\n  Completed = 'COMPLETED',\n  Retrying = 'RETRYING',\n  Failed = 'FAILED'\n}\n\nexport type JobList = PaginatedList & {\n  __typename?: 'JobList';\n  items: Array<Job>;\n  totalItems: Scalars['Int'];\n};\n\nexport type Job = Node & {\n  __typename?: 'Job';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  startedAt?: Maybe<Scalars['DateTime']>;\n  settledAt?: Maybe<Scalars['DateTime']>;\n  queueName: Scalars['String'];\n  state: JobState;\n  progress: Scalars['Float'];\n  data?: Maybe<Scalars['JSON']>;\n  result?: Maybe<Scalars['JSON']>;\n  error?: Maybe<Scalars['JSON']>;\n  isSettled: Scalars['Boolean'];\n  duration: Scalars['Int'];\n};\n\nexport type JobQueue = {\n  __typename?: 'JobQueue';\n  name: Scalars['String'];\n  running: Scalars['Boolean'];\n};\n\nexport type Order = Node & {\n  __typename?: 'Order';\n  nextStates: Array<Scalars['String']>;\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  /**\n   * The date & time that the Order was placed, i.e. the Customer\n   * completed the checkout and the Order is no longer \"active\"\n   */\n  orderPlacedAt?: Maybe<Scalars['DateTime']>;\n  /** A unique code for the Order */\n  code: Scalars['String'];\n  state: Scalars['String'];\n  /** An order is active as long as the payment process has not been completed */\n  active: Scalars['Boolean'];\n  customer?: Maybe<Customer>;\n  shippingAddress?: Maybe<OrderAddress>;\n  billingAddress?: Maybe<OrderAddress>;\n  lines: Array<OrderLine>;\n  /** Order-level adjustments to the order total, such as discounts from promotions */\n  adjustments: Array<Adjustment>;\n  couponCodes: Array<Scalars['String']>;\n  /** Promotions applied to the order. Only gets populated after the payment process has completed. */\n  promotions: Array<Promotion>;\n  payments?: Maybe<Array<Payment>>;\n  fulfillments?: Maybe<Array<Fulfillment>>;\n  totalQuantity: Scalars['Int'];\n  subTotalBeforeTax: Scalars['Int'];\n  /** The subTotal is the total of the OrderLines, before order-level promotions and shipping has been applied. */\n  subTotal: Scalars['Int'];\n  currencyCode: CurrencyCode;\n  shipping: Scalars['Int'];\n  shippingWithTax: Scalars['Int'];\n  shippingMethod?: Maybe<ShippingMethod>;\n  totalBeforeTax: Scalars['Int'];\n  total: Scalars['Int'];\n  taxSummary: Array<OrderTaxSummary>;\n  history: HistoryEntryList;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type OrderHistoryArgs = {\n  options?: Maybe<HistoryEntryListOptions>;\n};\n\nexport type UpdateOrderInput = {\n  id: Scalars['ID'];\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type FulfillOrderInput = {\n  lines: Array<OrderLineInput>;\n  method: Scalars['String'];\n  trackingCode?: Maybe<Scalars['String']>;\n};\n\nexport type CancelOrderInput = {\n  /** The id of the order to be cancelled */\n  orderId: Scalars['ID'];\n  /** Optionally specify which OrderLines to cancel. If not provided, all OrderLines will be cancelled */\n  lines?: Maybe<Array<OrderLineInput>>;\n  reason?: Maybe<Scalars['String']>;\n};\n\nexport type RefundOrderInput = {\n  lines: Array<OrderLineInput>;\n  shipping: Scalars['Int'];\n  adjustment: Scalars['Int'];\n  paymentId: Scalars['ID'];\n  reason?: Maybe<Scalars['String']>;\n};\n\nexport type OrderLineInput = {\n  orderLineId: Scalars['ID'];\n  quantity: Scalars['Int'];\n};\n\nexport type SettleRefundInput = {\n  id: Scalars['ID'];\n  transactionId: Scalars['String'];\n};\n\nexport type AddNoteToOrderInput = {\n  id: Scalars['ID'];\n  note: Scalars['String'];\n  isPublic: Scalars['Boolean'];\n};\n\nexport type UpdateOrderNoteInput = {\n  noteId: Scalars['ID'];\n  note?: Maybe<Scalars['String']>;\n  isPublic?: Maybe<Scalars['Boolean']>;\n};\n\n/** Returned if the Payment settlement fails */\nexport type SettlePaymentError = ErrorResult & {\n  __typename?: 'SettlePaymentError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n  paymentErrorMessage: Scalars['String'];\n};\n\n/** Returned if no OrderLines have been specified for the operation */\nexport type EmptyOrderLineSelectionError = ErrorResult & {\n  __typename?: 'EmptyOrderLineSelectionError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/** Returned if the specified items are already part of a Fulfillment */\nexport type ItemsAlreadyFulfilledError = ErrorResult & {\n  __typename?: 'ItemsAlreadyFulfilledError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/**\n * Returned if attempting to create a Fulfillment when there is insufficient\n * stockOnHand of a ProductVariant to satisfy the requested quantity.\n */\nexport type InsufficientStockOnHandError = ErrorResult & {\n  __typename?: 'InsufficientStockOnHandError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n  productVariantId: Scalars['ID'];\n  productVariantName: Scalars['String'];\n  stockOnHand: Scalars['Int'];\n};\n\n/** Returned if an operation has specified OrderLines from multiple Orders */\nexport type MultipleOrderError = ErrorResult & {\n  __typename?: 'MultipleOrderError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/** Returned if an attempting to cancel lines from an Order which is still active */\nexport type CancelActiveOrderError = ErrorResult & {\n  __typename?: 'CancelActiveOrderError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n  orderState: Scalars['String'];\n};\n\n/** Returned if an attempting to refund a Payment against OrderLines from a different Order */\nexport type PaymentOrderMismatchError = ErrorResult & {\n  __typename?: 'PaymentOrderMismatchError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/** Returned if an attempting to refund an Order which is not in the expected state */\nexport type RefundOrderStateError = ErrorResult & {\n  __typename?: 'RefundOrderStateError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n  orderState: Scalars['String'];\n};\n\n/** Returned if an attempting to refund an Order but neither items nor shipping refund was specified */\nexport type NothingToRefundError = ErrorResult & {\n  __typename?: 'NothingToRefundError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/** Returned if an attempting to refund an OrderItem which has already been refunded */\nexport type AlreadyRefundedError = ErrorResult & {\n  __typename?: 'AlreadyRefundedError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n  refundId: Scalars['ID'];\n};\n\n/** Returned if the specified quantity of an OrderLine is greater than the number of items in that line */\nexport type QuantityTooGreatError = ErrorResult & {\n  __typename?: 'QuantityTooGreatError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/** Returned when there is an error in transitioning the Refund state */\nexport type RefundStateTransitionError = ErrorResult & {\n  __typename?: 'RefundStateTransitionError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n  transitionError: Scalars['String'];\n  fromState: Scalars['String'];\n  toState: Scalars['String'];\n};\n\n/** Returned when there is an error in transitioning the Payment state */\nexport type PaymentStateTransitionError = ErrorResult & {\n  __typename?: 'PaymentStateTransitionError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n  transitionError: Scalars['String'];\n  fromState: Scalars['String'];\n  toState: Scalars['String'];\n};\n\n/** Returned when there is an error in transitioning the Fulfillment state */\nexport type FulfillmentStateTransitionError = ErrorResult & {\n  __typename?: 'FulfillmentStateTransitionError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n  transitionError: Scalars['String'];\n  fromState: Scalars['String'];\n  toState: Scalars['String'];\n};\n\nexport type TransitionOrderToStateResult = Order | OrderStateTransitionError;\n\nexport type SettlePaymentResult = Payment | SettlePaymentError | PaymentStateTransitionError | OrderStateTransitionError;\n\nexport type AddFulfillmentToOrderResult = Fulfillment | EmptyOrderLineSelectionError | ItemsAlreadyFulfilledError | InsufficientStockOnHandError;\n\nexport type CancelOrderResult = Order | EmptyOrderLineSelectionError | QuantityTooGreatError | MultipleOrderError | CancelActiveOrderError | OrderStateTransitionError;\n\nexport type RefundOrderResult = Refund | QuantityTooGreatError | NothingToRefundError | OrderStateTransitionError | MultipleOrderError | PaymentOrderMismatchError | RefundOrderStateError | AlreadyRefundedError | RefundStateTransitionError;\n\nexport type SettleRefundResult = Refund | RefundStateTransitionError;\n\nexport type TransitionFulfillmentToStateResult = Fulfillment | FulfillmentStateTransitionError;\n\nexport type PaymentMethodList = PaginatedList & {\n  __typename?: 'PaymentMethodList';\n  items: Array<PaymentMethod>;\n  totalItems: Scalars['Int'];\n};\n\nexport type UpdatePaymentMethodInput = {\n  id: Scalars['ID'];\n  code?: Maybe<Scalars['String']>;\n  enabled?: Maybe<Scalars['Boolean']>;\n  configArgs?: Maybe<Array<ConfigArgInput>>;\n};\n\nexport type ProductOptionGroupTranslationInput = {\n  id?: Maybe<Scalars['ID']>;\n  languageCode: LanguageCode;\n  name?: Maybe<Scalars['String']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type CreateProductOptionGroupInput = {\n  code: Scalars['String'];\n  translations: Array<ProductOptionGroupTranslationInput>;\n  options: Array<CreateGroupOptionInput>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type UpdateProductOptionGroupInput = {\n  id: Scalars['ID'];\n  code?: Maybe<Scalars['String']>;\n  translations?: Maybe<Array<ProductOptionGroupTranslationInput>>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type ProductOptionTranslationInput = {\n  id?: Maybe<Scalars['ID']>;\n  languageCode: LanguageCode;\n  name?: Maybe<Scalars['String']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type CreateGroupOptionInput = {\n  code: Scalars['String'];\n  translations: Array<ProductOptionGroupTranslationInput>;\n};\n\nexport type CreateProductOptionInput = {\n  productOptionGroupId: Scalars['ID'];\n  code: Scalars['String'];\n  translations: Array<ProductOptionGroupTranslationInput>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type UpdateProductOptionInput = {\n  id: Scalars['ID'];\n  code?: Maybe<Scalars['String']>;\n  translations?: Maybe<Array<ProductOptionGroupTranslationInput>>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type SearchResult = {\n  __typename?: 'SearchResult';\n  enabled: Scalars['Boolean'];\n  /** An array of ids of the Collections in which this result appears */\n  channelIds: Array<Scalars['ID']>;\n  sku: Scalars['String'];\n  slug: Scalars['String'];\n  productId: Scalars['ID'];\n  productName: Scalars['String'];\n  /** @deprecated Use `productAsset.preview` instead */\n  productPreview: Scalars['String'];\n  productAsset?: Maybe<SearchResultAsset>;\n  productVariantId: Scalars['ID'];\n  productVariantName: Scalars['String'];\n  /** @deprecated Use `productVariantAsset.preview` instead */\n  productVariantPreview: Scalars['String'];\n  productVariantAsset?: Maybe<SearchResultAsset>;\n  price: SearchResultPrice;\n  priceWithTax: SearchResultPrice;\n  currencyCode: CurrencyCode;\n  description: Scalars['String'];\n  facetIds: Array<Scalars['ID']>;\n  facetValueIds: Array<Scalars['ID']>;\n  /** An array of ids of the Collections in which this result appears */\n  collectionIds: Array<Scalars['ID']>;\n  /** A relevence score for the result. Differs between database implementations */\n  score: Scalars['Float'];\n};\n\nexport type Product = Node & {\n  __typename?: 'Product';\n  enabled: Scalars['Boolean'];\n  channels: Array<Channel>;\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  slug: Scalars['String'];\n  description: Scalars['String'];\n  featuredAsset?: Maybe<Asset>;\n  assets: Array<Asset>;\n  variants: Array<ProductVariant>;\n  optionGroups: Array<ProductOptionGroup>;\n  facetValues: Array<FacetValue>;\n  translations: Array<ProductTranslation>;\n  collections: Array<Collection>;\n  reviews: ProductReviewList;\n  reviewsHistogram: Array<ProductReviewHistogramItem>;\n  customFields?: Maybe<ProductCustomFields>;\n};\n\n\nexport type ProductReviewsArgs = {\n  options?: Maybe<ProductReviewListOptions>;\n};\n\nexport type ProductVariant = Node & {\n  __typename?: 'ProductVariant';\n  enabled: Scalars['Boolean'];\n  trackInventory: GlobalFlag;\n  stockOnHand: Scalars['Int'];\n  stockAllocated: Scalars['Int'];\n  outOfStockThreshold: Scalars['Int'];\n  useGlobalOutOfStockThreshold: Scalars['Boolean'];\n  stockMovements: StockMovementList;\n  id: Scalars['ID'];\n  product: Product;\n  productId: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  sku: Scalars['String'];\n  name: Scalars['String'];\n  featuredAsset?: Maybe<Asset>;\n  assets: Array<Asset>;\n  price: Scalars['Int'];\n  currencyCode: CurrencyCode;\n  priceIncludesTax: Scalars['Boolean'];\n  priceWithTax: Scalars['Int'];\n  taxRateApplied: TaxRate;\n  taxCategory: TaxCategory;\n  options: Array<ProductOption>;\n  facetValues: Array<FacetValue>;\n  translations: Array<ProductVariantTranslation>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type ProductVariantStockMovementsArgs = {\n  options?: Maybe<StockMovementListOptions>;\n};\n\nexport type StockMovementListOptions = {\n  type?: Maybe<StockMovementType>;\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n};\n\nexport type ProductTranslationInput = {\n  id?: Maybe<Scalars['ID']>;\n  languageCode: LanguageCode;\n  name?: Maybe<Scalars['String']>;\n  slug?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type CreateProductInput = {\n  featuredAssetId?: Maybe<Scalars['ID']>;\n  assetIds?: Maybe<Array<Scalars['ID']>>;\n  facetValueIds?: Maybe<Array<Scalars['ID']>>;\n  translations: Array<ProductTranslationInput>;\n  customFields?: Maybe<CreateProductCustomFieldsInput>;\n};\n\nexport type UpdateProductInput = {\n  id: Scalars['ID'];\n  enabled?: Maybe<Scalars['Boolean']>;\n  featuredAssetId?: Maybe<Scalars['ID']>;\n  assetIds?: Maybe<Array<Scalars['ID']>>;\n  facetValueIds?: Maybe<Array<Scalars['ID']>>;\n  translations?: Maybe<Array<ProductTranslationInput>>;\n  customFields?: Maybe<UpdateProductCustomFieldsInput>;\n};\n\nexport type ProductVariantTranslationInput = {\n  id?: Maybe<Scalars['ID']>;\n  languageCode: LanguageCode;\n  name?: Maybe<Scalars['String']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type CreateProductVariantOptionInput = {\n  optionGroupId: Scalars['ID'];\n  code: Scalars['String'];\n  translations: Array<ProductOptionTranslationInput>;\n};\n\nexport type CreateProductVariantInput = {\n  productId: Scalars['ID'];\n  translations: Array<ProductVariantTranslationInput>;\n  facetValueIds?: Maybe<Array<Scalars['ID']>>;\n  sku: Scalars['String'];\n  price?: Maybe<Scalars['Int']>;\n  taxCategoryId?: Maybe<Scalars['ID']>;\n  optionIds?: Maybe<Array<Scalars['ID']>>;\n  featuredAssetId?: Maybe<Scalars['ID']>;\n  assetIds?: Maybe<Array<Scalars['ID']>>;\n  stockOnHand?: Maybe<Scalars['Int']>;\n  outOfStockThreshold?: Maybe<Scalars['Int']>;\n  useGlobalOutOfStockThreshold?: Maybe<Scalars['Boolean']>;\n  trackInventory?: Maybe<GlobalFlag>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type UpdateProductVariantInput = {\n  id: Scalars['ID'];\n  enabled?: Maybe<Scalars['Boolean']>;\n  translations?: Maybe<Array<ProductVariantTranslationInput>>;\n  facetValueIds?: Maybe<Array<Scalars['ID']>>;\n  sku?: Maybe<Scalars['String']>;\n  taxCategoryId?: Maybe<Scalars['ID']>;\n  price?: Maybe<Scalars['Int']>;\n  featuredAssetId?: Maybe<Scalars['ID']>;\n  assetIds?: Maybe<Array<Scalars['ID']>>;\n  stockOnHand?: Maybe<Scalars['Int']>;\n  outOfStockThreshold?: Maybe<Scalars['Int']>;\n  useGlobalOutOfStockThreshold?: Maybe<Scalars['Boolean']>;\n  trackInventory?: Maybe<GlobalFlag>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type AssignProductsToChannelInput = {\n  productIds: Array<Scalars['ID']>;\n  channelId: Scalars['ID'];\n  priceFactor?: Maybe<Scalars['Float']>;\n};\n\nexport type RemoveProductsFromChannelInput = {\n  productIds: Array<Scalars['ID']>;\n  channelId: Scalars['ID'];\n};\n\nexport type ProductOptionInUseError = ErrorResult & {\n  __typename?: 'ProductOptionInUseError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n  optionGroupCode: Scalars['String'];\n  productVariantCount: Scalars['Int'];\n};\n\nexport type RemoveOptionGroupFromProductResult = Product | ProductOptionInUseError;\n\nexport type CreatePromotionInput = {\n  name: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  startsAt?: Maybe<Scalars['DateTime']>;\n  endsAt?: Maybe<Scalars['DateTime']>;\n  couponCode?: Maybe<Scalars['String']>;\n  perCustomerUsageLimit?: Maybe<Scalars['Int']>;\n  conditions: Array<ConfigurableOperationInput>;\n  actions: Array<ConfigurableOperationInput>;\n};\n\nexport type UpdatePromotionInput = {\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  enabled?: Maybe<Scalars['Boolean']>;\n  startsAt?: Maybe<Scalars['DateTime']>;\n  endsAt?: Maybe<Scalars['DateTime']>;\n  couponCode?: Maybe<Scalars['String']>;\n  perCustomerUsageLimit?: Maybe<Scalars['Int']>;\n  conditions?: Maybe<Array<ConfigurableOperationInput>>;\n  actions?: Maybe<Array<ConfigurableOperationInput>>;\n};\n\n/** Returned if a PromotionCondition has neither a couponCode nor any conditions set */\nexport type MissingConditionsError = ErrorResult & {\n  __typename?: 'MissingConditionsError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\nexport type CreatePromotionResult = Promotion | MissingConditionsError;\n\nexport type UpdatePromotionResult = Promotion | MissingConditionsError;\n\nexport type CreateRoleInput = {\n  code: Scalars['String'];\n  description: Scalars['String'];\n  permissions: Array<Permission>;\n  channelIds?: Maybe<Array<Scalars['ID']>>;\n};\n\nexport type UpdateRoleInput = {\n  id: Scalars['ID'];\n  code?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  permissions?: Maybe<Array<Permission>>;\n  channelIds?: Maybe<Array<Scalars['ID']>>;\n};\n\nexport type ShippingMethodTranslationInput = {\n  id?: Maybe<Scalars['ID']>;\n  languageCode: LanguageCode;\n  name?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type CreateShippingMethodInput = {\n  code: Scalars['String'];\n  checker: ConfigurableOperationInput;\n  calculator: ConfigurableOperationInput;\n  translations: Array<ShippingMethodTranslationInput>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type UpdateShippingMethodInput = {\n  id: Scalars['ID'];\n  code?: Maybe<Scalars['String']>;\n  checker?: Maybe<ConfigurableOperationInput>;\n  calculator?: Maybe<ConfigurableOperationInput>;\n  translations: Array<ShippingMethodTranslationInput>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type TestShippingMethodInput = {\n  checker: ConfigurableOperationInput;\n  calculator: ConfigurableOperationInput;\n  shippingAddress: CreateAddressInput;\n  lines: Array<TestShippingMethodOrderLineInput>;\n};\n\nexport type TestEligibleShippingMethodsInput = {\n  shippingAddress: CreateAddressInput;\n  lines: Array<TestShippingMethodOrderLineInput>;\n};\n\nexport type TestShippingMethodOrderLineInput = {\n  productVariantId: Scalars['ID'];\n  quantity: Scalars['Int'];\n};\n\nexport type TestShippingMethodResult = {\n  __typename?: 'TestShippingMethodResult';\n  eligible: Scalars['Boolean'];\n  quote?: Maybe<TestShippingMethodQuote>;\n};\n\nexport type TestShippingMethodQuote = {\n  __typename?: 'TestShippingMethodQuote';\n  price: Scalars['Int'];\n  priceWithTax: Scalars['Int'];\n  metadata?: Maybe<Scalars['JSON']>;\n};\n\nexport type CreateTaxCategoryInput = {\n  name: Scalars['String'];\n};\n\nexport type UpdateTaxCategoryInput = {\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n};\n\nexport type CreateTaxRateInput = {\n  name: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  value: Scalars['Float'];\n  categoryId: Scalars['ID'];\n  zoneId: Scalars['ID'];\n  customerGroupId?: Maybe<Scalars['ID']>;\n};\n\nexport type UpdateTaxRateInput = {\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  value?: Maybe<Scalars['Float']>;\n  enabled?: Maybe<Scalars['Boolean']>;\n  categoryId?: Maybe<Scalars['ID']>;\n  zoneId?: Maybe<Scalars['ID']>;\n  customerGroupId?: Maybe<Scalars['ID']>;\n};\n\nexport type CreateZoneInput = {\n  name: Scalars['String'];\n  memberIds?: Maybe<Array<Scalars['ID']>>;\n};\n\nexport type UpdateZoneInput = {\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n};\n\n\n\n\nexport enum GlobalFlag {\n  True = 'TRUE',\n  False = 'FALSE',\n  Inherit = 'INHERIT'\n}\n\nexport enum AdjustmentType {\n  Tax = 'TAX',\n  Promotion = 'PROMOTION',\n  Shipping = 'SHIPPING',\n  Refund = 'REFUND',\n  TaxRefund = 'TAX_REFUND',\n  PromotionRefund = 'PROMOTION_REFUND',\n  ShippingRefund = 'SHIPPING_REFUND'\n}\n\nexport type Adjustment = {\n  __typename?: 'Adjustment';\n  adjustmentSource: Scalars['String'];\n  type: AdjustmentType;\n  description: Scalars['String'];\n  amount: Scalars['Int'];\n};\n\nexport type ConfigArg = {\n  __typename?: 'ConfigArg';\n  name: Scalars['String'];\n  value: Scalars['String'];\n};\n\nexport type ConfigArgDefinition = {\n  __typename?: 'ConfigArgDefinition';\n  name: Scalars['String'];\n  type: Scalars['String'];\n  list: Scalars['Boolean'];\n  label?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  ui?: Maybe<Scalars['JSON']>;\n};\n\nexport type ConfigurableOperation = {\n  __typename?: 'ConfigurableOperation';\n  code: Scalars['String'];\n  args: Array<ConfigArg>;\n};\n\nexport type ConfigurableOperationDefinition = {\n  __typename?: 'ConfigurableOperationDefinition';\n  code: Scalars['String'];\n  args: Array<ConfigArgDefinition>;\n  description: Scalars['String'];\n};\n\nexport enum DeletionResult {\n  /** The entity was successfully deleted */\n  Deleted = 'DELETED',\n  /** Deletion did not take place, reason given in message */\n  NotDeleted = 'NOT_DELETED'\n}\n\n/**\n * @description\n * Permissions for administrators and customers. Used to control access to\n * GraphQL resolvers via the {@link Allow} decorator.\n * \n * @docsCategory common\n */\nexport enum Permission {\n  /** Authenticated means simply that the user is logged in */\n  Authenticated = 'Authenticated',\n  /** SuperAdmin has unrestricted access to all operations */\n  SuperAdmin = 'SuperAdmin',\n  /** Owner means the user owns this entity, e.g. a Customer's own Order */\n  Owner = 'Owner',\n  /** Public means any unauthenticated user may perform the operation */\n  Public = 'Public',\n  /** Grants permission to create Catalog */\n  CreateCatalog = 'CreateCatalog',\n  /** Grants permission to read Catalog */\n  ReadCatalog = 'ReadCatalog',\n  /** Grants permission to update Catalog */\n  UpdateCatalog = 'UpdateCatalog',\n  /** Grants permission to delete Catalog */\n  DeleteCatalog = 'DeleteCatalog',\n  /** Grants permission to create Customer */\n  CreateCustomer = 'CreateCustomer',\n  /** Grants permission to read Customer */\n  ReadCustomer = 'ReadCustomer',\n  /** Grants permission to update Customer */\n  UpdateCustomer = 'UpdateCustomer',\n  /** Grants permission to delete Customer */\n  DeleteCustomer = 'DeleteCustomer',\n  /** Grants permission to create Administrator */\n  CreateAdministrator = 'CreateAdministrator',\n  /** Grants permission to read Administrator */\n  ReadAdministrator = 'ReadAdministrator',\n  /** Grants permission to update Administrator */\n  UpdateAdministrator = 'UpdateAdministrator',\n  /** Grants permission to delete Administrator */\n  DeleteAdministrator = 'DeleteAdministrator',\n  /** Grants permission to create Order */\n  CreateOrder = 'CreateOrder',\n  /** Grants permission to read Order */\n  ReadOrder = 'ReadOrder',\n  /** Grants permission to update Order */\n  UpdateOrder = 'UpdateOrder',\n  /** Grants permission to delete Order */\n  DeleteOrder = 'DeleteOrder',\n  /** Grants permission to create Promotion */\n  CreatePromotion = 'CreatePromotion',\n  /** Grants permission to read Promotion */\n  ReadPromotion = 'ReadPromotion',\n  /** Grants permission to update Promotion */\n  UpdatePromotion = 'UpdatePromotion',\n  /** Grants permission to delete Promotion */\n  DeletePromotion = 'DeletePromotion',\n  /** Grants permission to create Settings */\n  CreateSettings = 'CreateSettings',\n  /** Grants permission to read Settings */\n  ReadSettings = 'ReadSettings',\n  /** Grants permission to update Settings */\n  UpdateSettings = 'UpdateSettings',\n  /** Grants permission to delete Settings */\n  DeleteSettings = 'DeleteSettings'\n}\n\nexport type DeletionResponse = {\n  __typename?: 'DeletionResponse';\n  result: DeletionResult;\n  message?: Maybe<Scalars['String']>;\n};\n\nexport type ConfigArgInput = {\n  name: Scalars['String'];\n  value: Scalars['String'];\n};\n\nexport type ConfigurableOperationInput = {\n  code: Scalars['String'];\n  arguments: Array<ConfigArgInput>;\n};\n\nexport type PaginatedList = {\n  items: Array<Node>;\n  totalItems: Scalars['Int'];\n};\n\nexport type Node = {\n  id: Scalars['ID'];\n};\n\nexport enum SortOrder {\n  Asc = 'ASC',\n  Desc = 'DESC'\n}\n\nexport enum ErrorCode {\n  UnknownError = 'UNKNOWN_ERROR',\n  MimeTypeError = 'MIME_TYPE_ERROR',\n  LanguageNotAvailableError = 'LANGUAGE_NOT_AVAILABLE_ERROR',\n  ChannelDefaultLanguageError = 'CHANNEL_DEFAULT_LANGUAGE_ERROR',\n  SettlePaymentError = 'SETTLE_PAYMENT_ERROR',\n  EmptyOrderLineSelectionError = 'EMPTY_ORDER_LINE_SELECTION_ERROR',\n  ItemsAlreadyFulfilledError = 'ITEMS_ALREADY_FULFILLED_ERROR',\n  InsufficientStockOnHandError = 'INSUFFICIENT_STOCK_ON_HAND_ERROR',\n  MultipleOrderError = 'MULTIPLE_ORDER_ERROR',\n  CancelActiveOrderError = 'CANCEL_ACTIVE_ORDER_ERROR',\n  PaymentOrderMismatchError = 'PAYMENT_ORDER_MISMATCH_ERROR',\n  RefundOrderStateError = 'REFUND_ORDER_STATE_ERROR',\n  NothingToRefundError = 'NOTHING_TO_REFUND_ERROR',\n  AlreadyRefundedError = 'ALREADY_REFUNDED_ERROR',\n  QuantityTooGreatError = 'QUANTITY_TOO_GREAT_ERROR',\n  RefundStateTransitionError = 'REFUND_STATE_TRANSITION_ERROR',\n  PaymentStateTransitionError = 'PAYMENT_STATE_TRANSITION_ERROR',\n  FulfillmentStateTransitionError = 'FULFILLMENT_STATE_TRANSITION_ERROR',\n  ProductOptionInUseError = 'PRODUCT_OPTION_IN_USE_ERROR',\n  MissingConditionsError = 'MISSING_CONDITIONS_ERROR',\n  NativeAuthStrategyError = 'NATIVE_AUTH_STRATEGY_ERROR',\n  InvalidCredentialsError = 'INVALID_CREDENTIALS_ERROR',\n  OrderStateTransitionError = 'ORDER_STATE_TRANSITION_ERROR',\n  EmailAddressConflictError = 'EMAIL_ADDRESS_CONFLICT_ERROR'\n}\n\nexport type ErrorResult = {\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\nexport type StringOperators = {\n  eq?: Maybe<Scalars['String']>;\n  contains?: Maybe<Scalars['String']>;\n  in?: Maybe<Array<Scalars['String']>>;\n  regex?: Maybe<Scalars['String']>;\n};\n\nexport type BooleanOperators = {\n  eq?: Maybe<Scalars['Boolean']>;\n};\n\nexport type NumberRange = {\n  start: Scalars['Float'];\n  end: Scalars['Float'];\n};\n\nexport type NumberOperators = {\n  eq?: Maybe<Scalars['Float']>;\n  lt?: Maybe<Scalars['Float']>;\n  lte?: Maybe<Scalars['Float']>;\n  gt?: Maybe<Scalars['Float']>;\n  gte?: Maybe<Scalars['Float']>;\n  between?: Maybe<NumberRange>;\n};\n\nexport type DateRange = {\n  start: Scalars['DateTime'];\n  end: Scalars['DateTime'];\n};\n\nexport type DateOperators = {\n  eq?: Maybe<Scalars['DateTime']>;\n  before?: Maybe<Scalars['DateTime']>;\n  after?: Maybe<Scalars['DateTime']>;\n  between?: Maybe<DateRange>;\n};\n\nexport enum LogicalOperator {\n  And = 'AND',\n  Or = 'OR'\n}\n\nexport type SearchInput = {\n  term?: Maybe<Scalars['String']>;\n  facetValueIds?: Maybe<Array<Scalars['ID']>>;\n  facetValueOperator?: Maybe<LogicalOperator>;\n  collectionId?: Maybe<Scalars['ID']>;\n  collectionSlug?: Maybe<Scalars['String']>;\n  groupByProduct?: Maybe<Scalars['Boolean']>;\n  take?: Maybe<Scalars['Int']>;\n  skip?: Maybe<Scalars['Int']>;\n  sort?: Maybe<SearchResultSortParameter>;\n};\n\nexport type SearchResultSortParameter = {\n  name?: Maybe<SortOrder>;\n  price?: Maybe<SortOrder>;\n};\n\nexport type CreateCustomerInput = {\n  title?: Maybe<Scalars['String']>;\n  firstName: Scalars['String'];\n  lastName: Scalars['String'];\n  phoneNumber?: Maybe<Scalars['String']>;\n  emailAddress: Scalars['String'];\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type CreateAddressInput = {\n  fullName?: Maybe<Scalars['String']>;\n  company?: Maybe<Scalars['String']>;\n  streetLine1: Scalars['String'];\n  streetLine2?: Maybe<Scalars['String']>;\n  city?: Maybe<Scalars['String']>;\n  province?: Maybe<Scalars['String']>;\n  postalCode?: Maybe<Scalars['String']>;\n  countryCode: Scalars['String'];\n  phoneNumber?: Maybe<Scalars['String']>;\n  defaultShippingAddress?: Maybe<Scalars['Boolean']>;\n  defaultBillingAddress?: Maybe<Scalars['Boolean']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type UpdateAddressInput = {\n  id: Scalars['ID'];\n  fullName?: Maybe<Scalars['String']>;\n  company?: Maybe<Scalars['String']>;\n  streetLine1?: Maybe<Scalars['String']>;\n  streetLine2?: Maybe<Scalars['String']>;\n  city?: Maybe<Scalars['String']>;\n  province?: Maybe<Scalars['String']>;\n  postalCode?: Maybe<Scalars['String']>;\n  countryCode?: Maybe<Scalars['String']>;\n  phoneNumber?: Maybe<Scalars['String']>;\n  defaultShippingAddress?: Maybe<Scalars['Boolean']>;\n  defaultBillingAddress?: Maybe<Scalars['Boolean']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\n/** Indicates that an operation succeeded, where we do not want to return any more specific information. */\nexport type Success = {\n  __typename?: 'Success';\n  success: Scalars['Boolean'];\n};\n\n/** Retured when attempting an operation that relies on the NativeAuthStrategy, if that strategy is not configured. */\nexport type NativeAuthStrategyError = ErrorResult & {\n  __typename?: 'NativeAuthStrategyError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/** Returned if the user authentication credentials are not valid */\nexport type InvalidCredentialsError = ErrorResult & {\n  __typename?: 'InvalidCredentialsError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n  authenticationError: Scalars['String'];\n};\n\n/** Returned if there is an error in transitioning the Order state */\nexport type OrderStateTransitionError = ErrorResult & {\n  __typename?: 'OrderStateTransitionError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n  transitionError: Scalars['String'];\n  fromState: Scalars['String'];\n  toState: Scalars['String'];\n};\n\n/** Retured when attemting to create a Customer with an email address already registered to an existing User. */\nexport type EmailAddressConflictError = ErrorResult & {\n  __typename?: 'EmailAddressConflictError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/**\n * @description\n * ISO 4217 currency code\n * \n * @docsCategory common\n */\nexport enum CurrencyCode {\n  /** United Arab Emirates dirham */\n  Aed = 'AED',\n  /** Afghan afghani */\n  Afn = 'AFN',\n  /** Albanian lek */\n  All = 'ALL',\n  /** Armenian dram */\n  Amd = 'AMD',\n  /** Netherlands Antillean guilder */\n  Ang = 'ANG',\n  /** Angolan kwanza */\n  Aoa = 'AOA',\n  /** Argentine peso */\n  Ars = 'ARS',\n  /** Australian dollar */\n  Aud = 'AUD',\n  /** Aruban florin */\n  Awg = 'AWG',\n  /** Azerbaijani manat */\n  Azn = 'AZN',\n  /** Bosnia and Herzegovina convertible mark */\n  Bam = 'BAM',\n  /** Barbados dollar */\n  Bbd = 'BBD',\n  /** Bangladeshi taka */\n  Bdt = 'BDT',\n  /** Bulgarian lev */\n  Bgn = 'BGN',\n  /** Bahraini dinar */\n  Bhd = 'BHD',\n  /** Burundian franc */\n  Bif = 'BIF',\n  /** Bermudian dollar */\n  Bmd = 'BMD',\n  /** Brunei dollar */\n  Bnd = 'BND',\n  /** Boliviano */\n  Bob = 'BOB',\n  /** Brazilian real */\n  Brl = 'BRL',\n  /** Bahamian dollar */\n  Bsd = 'BSD',\n  /** Bhutanese ngultrum */\n  Btn = 'BTN',\n  /** Botswana pula */\n  Bwp = 'BWP',\n  /** Belarusian ruble */\n  Byn = 'BYN',\n  /** Belize dollar */\n  Bzd = 'BZD',\n  /** Canadian dollar */\n  Cad = 'CAD',\n  /** Congolese franc */\n  Cdf = 'CDF',\n  /** Swiss franc */\n  Chf = 'CHF',\n  /** Chilean peso */\n  Clp = 'CLP',\n  /** Renminbi (Chinese) yuan */\n  Cny = 'CNY',\n  /** Colombian peso */\n  Cop = 'COP',\n  /** Costa Rican colon */\n  Crc = 'CRC',\n  /** Cuban convertible peso */\n  Cuc = 'CUC',\n  /** Cuban peso */\n  Cup = 'CUP',\n  /** Cape Verde escudo */\n  Cve = 'CVE',\n  /** Czech koruna */\n  Czk = 'CZK',\n  /** Djiboutian franc */\n  Djf = 'DJF',\n  /** Danish krone */\n  Dkk = 'DKK',\n  /** Dominican peso */\n  Dop = 'DOP',\n  /** Algerian dinar */\n  Dzd = 'DZD',\n  /** Egyptian pound */\n  Egp = 'EGP',\n  /** Eritrean nakfa */\n  Ern = 'ERN',\n  /** Ethiopian birr */\n  Etb = 'ETB',\n  /** Euro */\n  Eur = 'EUR',\n  /** Fiji dollar */\n  Fjd = 'FJD',\n  /** Falkland Islands pound */\n  Fkp = 'FKP',\n  /** Pound sterling */\n  Gbp = 'GBP',\n  /** Georgian lari */\n  Gel = 'GEL',\n  /** Ghanaian cedi */\n  Ghs = 'GHS',\n  /** Gibraltar pound */\n  Gip = 'GIP',\n  /** Gambian dalasi */\n  Gmd = 'GMD',\n  /** Guinean franc */\n  Gnf = 'GNF',\n  /** Guatemalan quetzal */\n  Gtq = 'GTQ',\n  /** Guyanese dollar */\n  Gyd = 'GYD',\n  /** Hong Kong dollar */\n  Hkd = 'HKD',\n  /** Honduran lempira */\n  Hnl = 'HNL',\n  /** Croatian kuna */\n  Hrk = 'HRK',\n  /** Haitian gourde */\n  Htg = 'HTG',\n  /** Hungarian forint */\n  Huf = 'HUF',\n  /** Indonesian rupiah */\n  Idr = 'IDR',\n  /** Israeli new shekel */\n  Ils = 'ILS',\n  /** Indian rupee */\n  Inr = 'INR',\n  /** Iraqi dinar */\n  Iqd = 'IQD',\n  /** Iranian rial */\n  Irr = 'IRR',\n  /** Icelandic króna */\n  Isk = 'ISK',\n  /** Jamaican dollar */\n  Jmd = 'JMD',\n  /** Jordanian dinar */\n  Jod = 'JOD',\n  /** Japanese yen */\n  Jpy = 'JPY',\n  /** Kenyan shilling */\n  Kes = 'KES',\n  /** Kyrgyzstani som */\n  Kgs = 'KGS',\n  /** Cambodian riel */\n  Khr = 'KHR',\n  /** Comoro franc */\n  Kmf = 'KMF',\n  /** North Korean won */\n  Kpw = 'KPW',\n  /** South Korean won */\n  Krw = 'KRW',\n  /** Kuwaiti dinar */\n  Kwd = 'KWD',\n  /** Cayman Islands dollar */\n  Kyd = 'KYD',\n  /** Kazakhstani tenge */\n  Kzt = 'KZT',\n  /** Lao kip */\n  Lak = 'LAK',\n  /** Lebanese pound */\n  Lbp = 'LBP',\n  /** Sri Lankan rupee */\n  Lkr = 'LKR',\n  /** Liberian dollar */\n  Lrd = 'LRD',\n  /** Lesotho loti */\n  Lsl = 'LSL',\n  /** Libyan dinar */\n  Lyd = 'LYD',\n  /** Moroccan dirham */\n  Mad = 'MAD',\n  /** Moldovan leu */\n  Mdl = 'MDL',\n  /** Malagasy ariary */\n  Mga = 'MGA',\n  /** Macedonian denar */\n  Mkd = 'MKD',\n  /** Myanmar kyat */\n  Mmk = 'MMK',\n  /** Mongolian tögrög */\n  Mnt = 'MNT',\n  /** Macanese pataca */\n  Mop = 'MOP',\n  /** Mauritanian ouguiya */\n  Mru = 'MRU',\n  /** Mauritian rupee */\n  Mur = 'MUR',\n  /** Maldivian rufiyaa */\n  Mvr = 'MVR',\n  /** Malawian kwacha */\n  Mwk = 'MWK',\n  /** Mexican peso */\n  Mxn = 'MXN',\n  /** Malaysian ringgit */\n  Myr = 'MYR',\n  /** Mozambican metical */\n  Mzn = 'MZN',\n  /** Namibian dollar */\n  Nad = 'NAD',\n  /** Nigerian naira */\n  Ngn = 'NGN',\n  /** Nicaraguan córdoba */\n  Nio = 'NIO',\n  /** Norwegian krone */\n  Nok = 'NOK',\n  /** Nepalese rupee */\n  Npr = 'NPR',\n  /** New Zealand dollar */\n  Nzd = 'NZD',\n  /** Omani rial */\n  Omr = 'OMR',\n  /** Panamanian balboa */\n  Pab = 'PAB',\n  /** Peruvian sol */\n  Pen = 'PEN',\n  /** Papua New Guinean kina */\n  Pgk = 'PGK',\n  /** Philippine peso */\n  Php = 'PHP',\n  /** Pakistani rupee */\n  Pkr = 'PKR',\n  /** Polish złoty */\n  Pln = 'PLN',\n  /** Paraguayan guaraní */\n  Pyg = 'PYG',\n  /** Qatari riyal */\n  Qar = 'QAR',\n  /** Romanian leu */\n  Ron = 'RON',\n  /** Serbian dinar */\n  Rsd = 'RSD',\n  /** Russian ruble */\n  Rub = 'RUB',\n  /** Rwandan franc */\n  Rwf = 'RWF',\n  /** Saudi riyal */\n  Sar = 'SAR',\n  /** Solomon Islands dollar */\n  Sbd = 'SBD',\n  /** Seychelles rupee */\n  Scr = 'SCR',\n  /** Sudanese pound */\n  Sdg = 'SDG',\n  /** Swedish krona/kronor */\n  Sek = 'SEK',\n  /** Singapore dollar */\n  Sgd = 'SGD',\n  /** Saint Helena pound */\n  Shp = 'SHP',\n  /** Sierra Leonean leone */\n  Sll = 'SLL',\n  /** Somali shilling */\n  Sos = 'SOS',\n  /** Surinamese dollar */\n  Srd = 'SRD',\n  /** South Sudanese pound */\n  Ssp = 'SSP',\n  /** São Tomé and Príncipe dobra */\n  Stn = 'STN',\n  /** Salvadoran colón */\n  Svc = 'SVC',\n  /** Syrian pound */\n  Syp = 'SYP',\n  /** Swazi lilangeni */\n  Szl = 'SZL',\n  /** Thai baht */\n  Thb = 'THB',\n  /** Tajikistani somoni */\n  Tjs = 'TJS',\n  /** Turkmenistan manat */\n  Tmt = 'TMT',\n  /** Tunisian dinar */\n  Tnd = 'TND',\n  /** Tongan paʻanga */\n  Top = 'TOP',\n  /** Turkish lira */\n  Try = 'TRY',\n  /** Trinidad and Tobago dollar */\n  Ttd = 'TTD',\n  /** New Taiwan dollar */\n  Twd = 'TWD',\n  /** Tanzanian shilling */\n  Tzs = 'TZS',\n  /** Ukrainian hryvnia */\n  Uah = 'UAH',\n  /** Ugandan shilling */\n  Ugx = 'UGX',\n  /** United States dollar */\n  Usd = 'USD',\n  /** Uruguayan peso */\n  Uyu = 'UYU',\n  /** Uzbekistan som */\n  Uzs = 'UZS',\n  /** Venezuelan bolívar soberano */\n  Ves = 'VES',\n  /** Vietnamese đồng */\n  Vnd = 'VND',\n  /** Vanuatu vatu */\n  Vuv = 'VUV',\n  /** Samoan tala */\n  Wst = 'WST',\n  /** CFA franc BEAC */\n  Xaf = 'XAF',\n  /** East Caribbean dollar */\n  Xcd = 'XCD',\n  /** CFA franc BCEAO */\n  Xof = 'XOF',\n  /** CFP franc (franc Pacifique) */\n  Xpf = 'XPF',\n  /** Yemeni rial */\n  Yer = 'YER',\n  /** South African rand */\n  Zar = 'ZAR',\n  /** Zambian kwacha */\n  Zmw = 'ZMW',\n  /** Zimbabwean dollar */\n  Zwl = 'ZWL'\n}\n\nexport type CustomField = {\n  name: Scalars['String'];\n  type: Scalars['String'];\n  list: Scalars['Boolean'];\n  label?: Maybe<Array<LocalizedString>>;\n  description?: Maybe<Array<LocalizedString>>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  internal?: Maybe<Scalars['Boolean']>;\n};\n\nexport type StringCustomFieldConfig = CustomField & {\n  __typename?: 'StringCustomFieldConfig';\n  name: Scalars['String'];\n  type: Scalars['String'];\n  list: Scalars['Boolean'];\n  length?: Maybe<Scalars['Int']>;\n  label?: Maybe<Array<LocalizedString>>;\n  description?: Maybe<Array<LocalizedString>>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  internal?: Maybe<Scalars['Boolean']>;\n  pattern?: Maybe<Scalars['String']>;\n  options?: Maybe<Array<StringFieldOption>>;\n};\n\nexport type StringFieldOption = {\n  __typename?: 'StringFieldOption';\n  value: Scalars['String'];\n  label?: Maybe<Array<LocalizedString>>;\n};\n\nexport type LocaleStringCustomFieldConfig = CustomField & {\n  __typename?: 'LocaleStringCustomFieldConfig';\n  name: Scalars['String'];\n  type: Scalars['String'];\n  list: Scalars['Boolean'];\n  length?: Maybe<Scalars['Int']>;\n  label?: Maybe<Array<LocalizedString>>;\n  description?: Maybe<Array<LocalizedString>>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  internal?: Maybe<Scalars['Boolean']>;\n  pattern?: Maybe<Scalars['String']>;\n};\n\nexport type IntCustomFieldConfig = CustomField & {\n  __typename?: 'IntCustomFieldConfig';\n  name: Scalars['String'];\n  type: Scalars['String'];\n  list: Scalars['Boolean'];\n  label?: Maybe<Array<LocalizedString>>;\n  description?: Maybe<Array<LocalizedString>>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  internal?: Maybe<Scalars['Boolean']>;\n  min?: Maybe<Scalars['Int']>;\n  max?: Maybe<Scalars['Int']>;\n  step?: Maybe<Scalars['Int']>;\n};\n\nexport type FloatCustomFieldConfig = CustomField & {\n  __typename?: 'FloatCustomFieldConfig';\n  name: Scalars['String'];\n  type: Scalars['String'];\n  list: Scalars['Boolean'];\n  label?: Maybe<Array<LocalizedString>>;\n  description?: Maybe<Array<LocalizedString>>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  internal?: Maybe<Scalars['Boolean']>;\n  min?: Maybe<Scalars['Float']>;\n  max?: Maybe<Scalars['Float']>;\n  step?: Maybe<Scalars['Float']>;\n};\n\nexport type BooleanCustomFieldConfig = CustomField & {\n  __typename?: 'BooleanCustomFieldConfig';\n  name: Scalars['String'];\n  type: Scalars['String'];\n  list: Scalars['Boolean'];\n  label?: Maybe<Array<LocalizedString>>;\n  description?: Maybe<Array<LocalizedString>>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  internal?: Maybe<Scalars['Boolean']>;\n};\n\n/**\n * Expects the same validation formats as the `<input type=\"datetime-local\">` HTML element.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/datetime-local#Additional_attributes\n */\nexport type DateTimeCustomFieldConfig = CustomField & {\n  __typename?: 'DateTimeCustomFieldConfig';\n  name: Scalars['String'];\n  type: Scalars['String'];\n  list: Scalars['Boolean'];\n  label?: Maybe<Array<LocalizedString>>;\n  description?: Maybe<Array<LocalizedString>>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  internal?: Maybe<Scalars['Boolean']>;\n  min?: Maybe<Scalars['String']>;\n  max?: Maybe<Scalars['String']>;\n  step?: Maybe<Scalars['Int']>;\n};\n\nexport type LocalizedString = {\n  __typename?: 'LocalizedString';\n  languageCode: LanguageCode;\n  value: Scalars['String'];\n};\n\nexport type CustomFieldConfig = StringCustomFieldConfig | LocaleStringCustomFieldConfig | IntCustomFieldConfig | FloatCustomFieldConfig | BooleanCustomFieldConfig | DateTimeCustomFieldConfig;\n\n/**\n * @description\n * Languages in the form of a ISO 639-1 language code with optional\n * region or script modifier (e.g. de_AT). The selection available is based\n * on the [Unicode CLDR summary list](https://unicode-org.github.io/cldr-staging/charts/37/summary/root.html)\n * and includes the major spoken languages of the world and any widely-used variants.\n * \n * @docsCategory common\n */\nexport enum LanguageCode {\n  /** Afrikaans */\n  Af = 'af',\n  /** Akan */\n  Ak = 'ak',\n  /** Albanian */\n  Sq = 'sq',\n  /** Amharic */\n  Am = 'am',\n  /** Arabic */\n  Ar = 'ar',\n  /** Armenian */\n  Hy = 'hy',\n  /** Assamese */\n  As = 'as',\n  /** Azerbaijani */\n  Az = 'az',\n  /** Bambara */\n  Bm = 'bm',\n  /** Bangla */\n  Bn = 'bn',\n  /** Basque */\n  Eu = 'eu',\n  /** Belarusian */\n  Be = 'be',\n  /** Bosnian */\n  Bs = 'bs',\n  /** Breton */\n  Br = 'br',\n  /** Bulgarian */\n  Bg = 'bg',\n  /** Burmese */\n  My = 'my',\n  /** Catalan */\n  Ca = 'ca',\n  /** Chechen */\n  Ce = 'ce',\n  /** Chinese */\n  Zh = 'zh',\n  /** Simplified Chinese */\n  ZhHans = 'zh_Hans',\n  /** Traditional Chinese */\n  ZhHant = 'zh_Hant',\n  /** Church Slavic */\n  Cu = 'cu',\n  /** Cornish */\n  Kw = 'kw',\n  /** Corsican */\n  Co = 'co',\n  /** Croatian */\n  Hr = 'hr',\n  /** Czech */\n  Cs = 'cs',\n  /** Danish */\n  Da = 'da',\n  /** Dutch */\n  Nl = 'nl',\n  /** Flemish */\n  NlBe = 'nl_BE',\n  /** Dzongkha */\n  Dz = 'dz',\n  /** English */\n  En = 'en',\n  /** Australian English */\n  EnAu = 'en_AU',\n  /** Canadian English */\n  EnCa = 'en_CA',\n  /** British English */\n  EnGb = 'en_GB',\n  /** American English */\n  EnUs = 'en_US',\n  /** Esperanto */\n  Eo = 'eo',\n  /** Estonian */\n  Et = 'et',\n  /** Ewe */\n  Ee = 'ee',\n  /** Faroese */\n  Fo = 'fo',\n  /** Finnish */\n  Fi = 'fi',\n  /** French */\n  Fr = 'fr',\n  /** Canadian French */\n  FrCa = 'fr_CA',\n  /** Swiss French */\n  FrCh = 'fr_CH',\n  /** Fulah */\n  Ff = 'ff',\n  /** Galician */\n  Gl = 'gl',\n  /** Ganda */\n  Lg = 'lg',\n  /** Georgian */\n  Ka = 'ka',\n  /** German */\n  De = 'de',\n  /** Austrian German */\n  DeAt = 'de_AT',\n  /** Swiss High German */\n  DeCh = 'de_CH',\n  /** Greek */\n  El = 'el',\n  /** Gujarati */\n  Gu = 'gu',\n  /** Haitian Creole */\n  Ht = 'ht',\n  /** Hausa */\n  Ha = 'ha',\n  /** Hebrew */\n  He = 'he',\n  /** Hindi */\n  Hi = 'hi',\n  /** Hungarian */\n  Hu = 'hu',\n  /** Icelandic */\n  Is = 'is',\n  /** Igbo */\n  Ig = 'ig',\n  /** Indonesian */\n  Id = 'id',\n  /** Interlingua */\n  Ia = 'ia',\n  /** Irish */\n  Ga = 'ga',\n  /** Italian */\n  It = 'it',\n  /** Japanese */\n  Ja = 'ja',\n  /** Javanese */\n  Jv = 'jv',\n  /** Kalaallisut */\n  Kl = 'kl',\n  /** Kannada */\n  Kn = 'kn',\n  /** Kashmiri */\n  Ks = 'ks',\n  /** Kazakh */\n  Kk = 'kk',\n  /** Khmer */\n  Km = 'km',\n  /** Kikuyu */\n  Ki = 'ki',\n  /** Kinyarwanda */\n  Rw = 'rw',\n  /** Korean */\n  Ko = 'ko',\n  /** Kurdish */\n  Ku = 'ku',\n  /** Kyrgyz */\n  Ky = 'ky',\n  /** Lao */\n  Lo = 'lo',\n  /** Latin */\n  La = 'la',\n  /** Latvian */\n  Lv = 'lv',\n  /** Lingala */\n  Ln = 'ln',\n  /** Lithuanian */\n  Lt = 'lt',\n  /** Luba-Katanga */\n  Lu = 'lu',\n  /** Luxembourgish */\n  Lb = 'lb',\n  /** Macedonian */\n  Mk = 'mk',\n  /** Malagasy */\n  Mg = 'mg',\n  /** Malay */\n  Ms = 'ms',\n  /** Malayalam */\n  Ml = 'ml',\n  /** Maltese */\n  Mt = 'mt',\n  /** Manx */\n  Gv = 'gv',\n  /** Maori */\n  Mi = 'mi',\n  /** Marathi */\n  Mr = 'mr',\n  /** Mongolian */\n  Mn = 'mn',\n  /** Nepali */\n  Ne = 'ne',\n  /** North Ndebele */\n  Nd = 'nd',\n  /** Northern Sami */\n  Se = 'se',\n  /** Norwegian Bokmål */\n  Nb = 'nb',\n  /** Norwegian Nynorsk */\n  Nn = 'nn',\n  /** Nyanja */\n  Ny = 'ny',\n  /** Odia */\n  Or = 'or',\n  /** Oromo */\n  Om = 'om',\n  /** Ossetic */\n  Os = 'os',\n  /** Pashto */\n  Ps = 'ps',\n  /** Persian */\n  Fa = 'fa',\n  /** Dari */\n  FaAf = 'fa_AF',\n  /** Polish */\n  Pl = 'pl',\n  /** Portuguese */\n  Pt = 'pt',\n  /** Brazilian Portuguese */\n  PtBr = 'pt_BR',\n  /** European Portuguese */\n  PtPt = 'pt_PT',\n  /** Punjabi */\n  Pa = 'pa',\n  /** Quechua */\n  Qu = 'qu',\n  /** Romanian */\n  Ro = 'ro',\n  /** Moldavian */\n  RoMd = 'ro_MD',\n  /** Romansh */\n  Rm = 'rm',\n  /** Rundi */\n  Rn = 'rn',\n  /** Russian */\n  Ru = 'ru',\n  /** Samoan */\n  Sm = 'sm',\n  /** Sango */\n  Sg = 'sg',\n  /** Sanskrit */\n  Sa = 'sa',\n  /** Scottish Gaelic */\n  Gd = 'gd',\n  /** Serbian */\n  Sr = 'sr',\n  /** Shona */\n  Sn = 'sn',\n  /** Sichuan Yi */\n  Ii = 'ii',\n  /** Sindhi */\n  Sd = 'sd',\n  /** Sinhala */\n  Si = 'si',\n  /** Slovak */\n  Sk = 'sk',\n  /** Slovenian */\n  Sl = 'sl',\n  /** Somali */\n  So = 'so',\n  /** Southern Sotho */\n  St = 'st',\n  /** Spanish */\n  Es = 'es',\n  /** European Spanish */\n  EsEs = 'es_ES',\n  /** Mexican Spanish */\n  EsMx = 'es_MX',\n  /** Sundanese */\n  Su = 'su',\n  /** Swahili */\n  Sw = 'sw',\n  /** Congo Swahili */\n  SwCd = 'sw_CD',\n  /** Swedish */\n  Sv = 'sv',\n  /** Tajik */\n  Tg = 'tg',\n  /** Tamil */\n  Ta = 'ta',\n  /** Tatar */\n  Tt = 'tt',\n  /** Telugu */\n  Te = 'te',\n  /** Thai */\n  Th = 'th',\n  /** Tibetan */\n  Bo = 'bo',\n  /** Tigrinya */\n  Ti = 'ti',\n  /** Tongan */\n  To = 'to',\n  /** Turkish */\n  Tr = 'tr',\n  /** Turkmen */\n  Tk = 'tk',\n  /** Ukrainian */\n  Uk = 'uk',\n  /** Urdu */\n  Ur = 'ur',\n  /** Uyghur */\n  Ug = 'ug',\n  /** Uzbek */\n  Uz = 'uz',\n  /** Vietnamese */\n  Vi = 'vi',\n  /** Volapük */\n  Vo = 'vo',\n  /** Welsh */\n  Cy = 'cy',\n  /** Western Frisian */\n  Fy = 'fy',\n  /** Wolof */\n  Wo = 'wo',\n  /** Xhosa */\n  Xh = 'xh',\n  /** Yiddish */\n  Yi = 'yi',\n  /** Yoruba */\n  Yo = 'yo',\n  /** Zulu */\n  Zu = 'zu'\n}\n\nexport type Address = Node & {\n  __typename?: 'Address';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  fullName?: Maybe<Scalars['String']>;\n  company?: Maybe<Scalars['String']>;\n  streetLine1: Scalars['String'];\n  streetLine2?: Maybe<Scalars['String']>;\n  city?: Maybe<Scalars['String']>;\n  province?: Maybe<Scalars['String']>;\n  postalCode?: Maybe<Scalars['String']>;\n  country: Country;\n  phoneNumber?: Maybe<Scalars['String']>;\n  defaultShippingAddress?: Maybe<Scalars['Boolean']>;\n  defaultBillingAddress?: Maybe<Scalars['Boolean']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type Administrator = Node & {\n  __typename?: 'Administrator';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  firstName: Scalars['String'];\n  lastName: Scalars['String'];\n  emailAddress: Scalars['String'];\n  user: User;\n};\n\nexport type AdministratorList = PaginatedList & {\n  __typename?: 'AdministratorList';\n  items: Array<Administrator>;\n  totalItems: Scalars['Int'];\n};\n\nexport type Asset = Node & {\n  __typename?: 'Asset';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  type: AssetType;\n  fileSize: Scalars['Int'];\n  mimeType: Scalars['String'];\n  width: Scalars['Int'];\n  height: Scalars['Int'];\n  source: Scalars['String'];\n  preview: Scalars['String'];\n  focalPoint?: Maybe<Coordinate>;\n};\n\nexport type Coordinate = {\n  __typename?: 'Coordinate';\n  x: Scalars['Float'];\n  y: Scalars['Float'];\n};\n\nexport type AssetList = PaginatedList & {\n  __typename?: 'AssetList';\n  items: Array<Asset>;\n  totalItems: Scalars['Int'];\n};\n\nexport enum AssetType {\n  Image = 'IMAGE',\n  Video = 'VIDEO',\n  Binary = 'BINARY'\n}\n\nexport type CurrentUser = {\n  __typename?: 'CurrentUser';\n  id: Scalars['ID'];\n  identifier: Scalars['String'];\n  channels: Array<CurrentUserChannel>;\n};\n\nexport type CurrentUserChannel = {\n  __typename?: 'CurrentUserChannel';\n  id: Scalars['ID'];\n  token: Scalars['String'];\n  code: Scalars['String'];\n  permissions: Array<Permission>;\n};\n\nexport type Channel = Node & {\n  __typename?: 'Channel';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  code: Scalars['String'];\n  token: Scalars['String'];\n  defaultTaxZone?: Maybe<Zone>;\n  defaultShippingZone?: Maybe<Zone>;\n  defaultLanguageCode: LanguageCode;\n  currencyCode: CurrencyCode;\n  pricesIncludeTax: Scalars['Boolean'];\n};\n\nexport type CollectionBreadcrumb = {\n  __typename?: 'CollectionBreadcrumb';\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  slug: Scalars['String'];\n};\n\nexport type CollectionTranslation = {\n  __typename?: 'CollectionTranslation';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  slug: Scalars['String'];\n  description: Scalars['String'];\n};\n\nexport type CollectionList = PaginatedList & {\n  __typename?: 'CollectionList';\n  items: Array<Collection>;\n  totalItems: Scalars['Int'];\n};\n\nexport type ProductVariantList = PaginatedList & {\n  __typename?: 'ProductVariantList';\n  items: Array<ProductVariant>;\n  totalItems: Scalars['Int'];\n};\n\nexport type Country = Node & {\n  __typename?: 'Country';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  code: Scalars['String'];\n  name: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  translations: Array<CountryTranslation>;\n};\n\nexport type CountryTranslation = {\n  __typename?: 'CountryTranslation';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n};\n\nexport type CountryList = PaginatedList & {\n  __typename?: 'CountryList';\n  items: Array<Country>;\n  totalItems: Scalars['Int'];\n};\n\nexport type CustomerGroup = Node & {\n  __typename?: 'CustomerGroup';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  customers: CustomerList;\n};\n\n\nexport type CustomerGroupCustomersArgs = {\n  options?: Maybe<CustomerListOptions>;\n};\n\nexport type CustomerList = PaginatedList & {\n  __typename?: 'CustomerList';\n  items: Array<Customer>;\n  totalItems: Scalars['Int'];\n};\n\nexport type FacetValue = Node & {\n  __typename?: 'FacetValue';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  facet: Facet;\n  name: Scalars['String'];\n  code: Scalars['String'];\n  translations: Array<FacetValueTranslation>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type FacetValueTranslation = {\n  __typename?: 'FacetValueTranslation';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n};\n\nexport type FacetTranslation = {\n  __typename?: 'FacetTranslation';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n};\n\nexport type FacetList = PaginatedList & {\n  __typename?: 'FacetList';\n  items: Array<Facet>;\n  totalItems: Scalars['Int'];\n};\n\nexport type GlobalSettings = {\n  __typename?: 'GlobalSettings';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  availableLanguages: Array<LanguageCode>;\n  trackInventory: Scalars['Boolean'];\n  outOfStockThreshold: Scalars['Int'];\n  serverConfig: ServerConfig;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type OrderProcessState = {\n  __typename?: 'OrderProcessState';\n  name: Scalars['String'];\n  to: Array<Scalars['String']>;\n};\n\nexport type PermissionDefinition = {\n  __typename?: 'PermissionDefinition';\n  name: Scalars['String'];\n  description: Scalars['String'];\n  assignable: Scalars['Boolean'];\n};\n\nexport type ServerConfig = {\n  __typename?: 'ServerConfig';\n  orderProcess: Array<OrderProcessState>;\n  permittedAssetTypes: Array<Scalars['String']>;\n  permissions: Array<PermissionDefinition>;\n  customFieldConfig: CustomFields;\n};\n\nexport type HistoryEntry = Node & {\n  __typename?: 'HistoryEntry';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  isPublic: Scalars['Boolean'];\n  type: HistoryEntryType;\n  administrator?: Maybe<Administrator>;\n  data: Scalars['JSON'];\n};\n\nexport enum HistoryEntryType {\n  CustomerRegistered = 'CUSTOMER_REGISTERED',\n  CustomerVerified = 'CUSTOMER_VERIFIED',\n  CustomerDetailUpdated = 'CUSTOMER_DETAIL_UPDATED',\n  CustomerAddedToGroup = 'CUSTOMER_ADDED_TO_GROUP',\n  CustomerRemovedFromGroup = 'CUSTOMER_REMOVED_FROM_GROUP',\n  CustomerAddressCreated = 'CUSTOMER_ADDRESS_CREATED',\n  CustomerAddressUpdated = 'CUSTOMER_ADDRESS_UPDATED',\n  CustomerAddressDeleted = 'CUSTOMER_ADDRESS_DELETED',\n  CustomerPasswordUpdated = 'CUSTOMER_PASSWORD_UPDATED',\n  CustomerPasswordResetRequested = 'CUSTOMER_PASSWORD_RESET_REQUESTED',\n  CustomerPasswordResetVerified = 'CUSTOMER_PASSWORD_RESET_VERIFIED',\n  CustomerEmailUpdateRequested = 'CUSTOMER_EMAIL_UPDATE_REQUESTED',\n  CustomerEmailUpdateVerified = 'CUSTOMER_EMAIL_UPDATE_VERIFIED',\n  CustomerNote = 'CUSTOMER_NOTE',\n  OrderStateTransition = 'ORDER_STATE_TRANSITION',\n  OrderPaymentTransition = 'ORDER_PAYMENT_TRANSITION',\n  OrderFulfillment = 'ORDER_FULFILLMENT',\n  OrderCancellation = 'ORDER_CANCELLATION',\n  OrderRefundTransition = 'ORDER_REFUND_TRANSITION',\n  OrderFulfillmentTransition = 'ORDER_FULFILLMENT_TRANSITION',\n  OrderNote = 'ORDER_NOTE',\n  OrderCouponApplied = 'ORDER_COUPON_APPLIED',\n  OrderCouponRemoved = 'ORDER_COUPON_REMOVED'\n}\n\nexport type HistoryEntryList = PaginatedList & {\n  __typename?: 'HistoryEntryList';\n  items: Array<HistoryEntry>;\n  totalItems: Scalars['Int'];\n};\n\nexport type ImportInfo = {\n  __typename?: 'ImportInfo';\n  errors?: Maybe<Array<Scalars['String']>>;\n  processed: Scalars['Int'];\n  imported: Scalars['Int'];\n};\n\n/**\n * A summary of the taxes being applied to this order, grouped\n * by taxRate.\n */\nexport type OrderTaxSummary = {\n  __typename?: 'OrderTaxSummary';\n  /** The taxRate as a percentage */\n  taxRate: Scalars['Float'];\n  /** The total net price or OrderItems to which this taxRate applies */\n  taxBase: Scalars['Int'];\n  /** The total tax being applied to the Order at this taxRate */\n  taxTotal: Scalars['Int'];\n};\n\nexport type OrderAddress = {\n  __typename?: 'OrderAddress';\n  fullName?: Maybe<Scalars['String']>;\n  company?: Maybe<Scalars['String']>;\n  streetLine1?: Maybe<Scalars['String']>;\n  streetLine2?: Maybe<Scalars['String']>;\n  city?: Maybe<Scalars['String']>;\n  province?: Maybe<Scalars['String']>;\n  postalCode?: Maybe<Scalars['String']>;\n  country?: Maybe<Scalars['String']>;\n  countryCode?: Maybe<Scalars['String']>;\n  phoneNumber?: Maybe<Scalars['String']>;\n};\n\nexport type OrderList = PaginatedList & {\n  __typename?: 'OrderList';\n  items: Array<Order>;\n  totalItems: Scalars['Int'];\n};\n\nexport type ShippingMethodQuote = {\n  __typename?: 'ShippingMethodQuote';\n  id: Scalars['ID'];\n  price: Scalars['Int'];\n  priceWithTax: Scalars['Int'];\n  name: Scalars['String'];\n  description: Scalars['String'];\n  metadata?: Maybe<Scalars['JSON']>;\n};\n\nexport type OrderItem = Node & {\n  __typename?: 'OrderItem';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  cancelled: Scalars['Boolean'];\n  /** The price of a single unit, excluding tax */\n  unitPrice: Scalars['Int'];\n  /** The price of a single unit, including tax */\n  unitPriceWithTax: Scalars['Int'];\n  /** @deprecated `unitPrice` is now always without tax */\n  unitPriceIncludesTax: Scalars['Boolean'];\n  taxRate: Scalars['Float'];\n  adjustments: Array<Adjustment>;\n  fulfillment?: Maybe<Fulfillment>;\n  refundId?: Maybe<Scalars['ID']>;\n};\n\nexport type OrderLine = Node & {\n  __typename?: 'OrderLine';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  productVariant: ProductVariant;\n  featuredAsset?: Maybe<Asset>;\n  unitPrice: Scalars['Int'];\n  unitPriceWithTax: Scalars['Int'];\n  quantity: Scalars['Int'];\n  items: Array<OrderItem>;\n  /** @deprecated Use `linePriceWithTax` instead */\n  totalPrice: Scalars['Int'];\n  taxRate: Scalars['Float'];\n  /** The total price of the line excluding tax */\n  linePrice: Scalars['Int'];\n  /** The total tax on this line */\n  lineTax: Scalars['Int'];\n  /** The total price of the line including tax */\n  linePriceWithTax: Scalars['Int'];\n  adjustments: Array<Adjustment>;\n  order: Order;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type Payment = Node & {\n  __typename?: 'Payment';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  method: Scalars['String'];\n  amount: Scalars['Int'];\n  state: Scalars['String'];\n  transactionId?: Maybe<Scalars['String']>;\n  errorMessage?: Maybe<Scalars['String']>;\n  refunds: Array<Refund>;\n  metadata?: Maybe<Scalars['JSON']>;\n};\n\nexport type Refund = Node & {\n  __typename?: 'Refund';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  items: Scalars['Int'];\n  shipping: Scalars['Int'];\n  adjustment: Scalars['Int'];\n  total: Scalars['Int'];\n  method?: Maybe<Scalars['String']>;\n  state: Scalars['String'];\n  transactionId?: Maybe<Scalars['String']>;\n  reason?: Maybe<Scalars['String']>;\n  orderItems: Array<OrderItem>;\n  paymentId: Scalars['ID'];\n  metadata?: Maybe<Scalars['JSON']>;\n};\n\nexport type PaymentMethod = Node & {\n  __typename?: 'PaymentMethod';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  code: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  configArgs: Array<ConfigArg>;\n  definition: ConfigurableOperationDefinition;\n};\n\nexport type ProductOptionGroup = Node & {\n  __typename?: 'ProductOptionGroup';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  code: Scalars['String'];\n  name: Scalars['String'];\n  options: Array<ProductOption>;\n  translations: Array<ProductOptionGroupTranslation>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type ProductOptionGroupTranslation = {\n  __typename?: 'ProductOptionGroupTranslation';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n};\n\nexport type ProductOption = Node & {\n  __typename?: 'ProductOption';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  code: Scalars['String'];\n  name: Scalars['String'];\n  groupId: Scalars['ID'];\n  group: ProductOptionGroup;\n  translations: Array<ProductOptionTranslation>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type ProductOptionTranslation = {\n  __typename?: 'ProductOptionTranslation';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n};\n\nexport type SearchReindexResponse = {\n  __typename?: 'SearchReindexResponse';\n  success: Scalars['Boolean'];\n};\n\nexport type SearchResponse = {\n  __typename?: 'SearchResponse';\n  items: Array<SearchResult>;\n  totalItems: Scalars['Int'];\n  facetValues: Array<FacetValueResult>;\n};\n\n/**\n * Which FacetValues are present in the products returned\n * by the search, and in what quantity.\n */\nexport type FacetValueResult = {\n  __typename?: 'FacetValueResult';\n  facetValue: FacetValue;\n  count: Scalars['Int'];\n};\n\nexport type SearchResultAsset = {\n  __typename?: 'SearchResultAsset';\n  id: Scalars['ID'];\n  preview: Scalars['String'];\n  focalPoint?: Maybe<Coordinate>;\n};\n\n/** The price of a search result product, either as a range or as a single price */\nexport type SearchResultPrice = PriceRange | SinglePrice;\n\n/** The price value where the result has a single price */\nexport type SinglePrice = {\n  __typename?: 'SinglePrice';\n  value: Scalars['Int'];\n};\n\n/** The price range where the result has more than one price */\nexport type PriceRange = {\n  __typename?: 'PriceRange';\n  min: Scalars['Int'];\n  max: Scalars['Int'];\n};\n\nexport type ProductTranslation = {\n  __typename?: 'ProductTranslation';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  slug: Scalars['String'];\n  description: Scalars['String'];\n};\n\nexport type ProductList = PaginatedList & {\n  __typename?: 'ProductList';\n  items: Array<Product>;\n  totalItems: Scalars['Int'];\n};\n\nexport type ProductVariantTranslation = {\n  __typename?: 'ProductVariantTranslation';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n};\n\nexport type Promotion = Node & {\n  __typename?: 'Promotion';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  startsAt?: Maybe<Scalars['DateTime']>;\n  endsAt?: Maybe<Scalars['DateTime']>;\n  couponCode?: Maybe<Scalars['String']>;\n  perCustomerUsageLimit?: Maybe<Scalars['Int']>;\n  name: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  conditions: Array<ConfigurableOperation>;\n  actions: Array<ConfigurableOperation>;\n};\n\nexport type PromotionList = PaginatedList & {\n  __typename?: 'PromotionList';\n  items: Array<Promotion>;\n  totalItems: Scalars['Int'];\n};\n\nexport type Role = Node & {\n  __typename?: 'Role';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  code: Scalars['String'];\n  description: Scalars['String'];\n  permissions: Array<Permission>;\n  channels: Array<Channel>;\n};\n\nexport type RoleList = PaginatedList & {\n  __typename?: 'RoleList';\n  items: Array<Role>;\n  totalItems: Scalars['Int'];\n};\n\nexport type ShippingMethod = Node & {\n  __typename?: 'ShippingMethod';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  code: Scalars['String'];\n  name: Scalars['String'];\n  description: Scalars['String'];\n  checker: ConfigurableOperation;\n  calculator: ConfigurableOperation;\n  translations: Array<ShippingMethodTranslation>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type ShippingMethodTranslation = {\n  __typename?: 'ShippingMethodTranslation';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  description: Scalars['String'];\n};\n\nexport type ShippingMethodList = PaginatedList & {\n  __typename?: 'ShippingMethodList';\n  items: Array<ShippingMethod>;\n  totalItems: Scalars['Int'];\n};\n\nexport enum StockMovementType {\n  Adjustment = 'ADJUSTMENT',\n  Allocation = 'ALLOCATION',\n  Release = 'RELEASE',\n  Sale = 'SALE',\n  Cancellation = 'CANCELLATION',\n  Return = 'RETURN'\n}\n\nexport type StockMovement = {\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  productVariant: ProductVariant;\n  type: StockMovementType;\n  quantity: Scalars['Int'];\n};\n\nexport type StockAdjustment = Node & StockMovement & {\n  __typename?: 'StockAdjustment';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  productVariant: ProductVariant;\n  type: StockMovementType;\n  quantity: Scalars['Int'];\n};\n\nexport type Allocation = Node & StockMovement & {\n  __typename?: 'Allocation';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  productVariant: ProductVariant;\n  type: StockMovementType;\n  quantity: Scalars['Int'];\n  orderLine: OrderLine;\n};\n\nexport type Sale = Node & StockMovement & {\n  __typename?: 'Sale';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  productVariant: ProductVariant;\n  type: StockMovementType;\n  quantity: Scalars['Int'];\n  orderItem: OrderItem;\n};\n\nexport type Cancellation = Node & StockMovement & {\n  __typename?: 'Cancellation';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  productVariant: ProductVariant;\n  type: StockMovementType;\n  quantity: Scalars['Int'];\n  orderLine: OrderLine;\n};\n\nexport type Return = Node & StockMovement & {\n  __typename?: 'Return';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  productVariant: ProductVariant;\n  type: StockMovementType;\n  quantity: Scalars['Int'];\n  orderItem: OrderItem;\n};\n\nexport type Release = Node & StockMovement & {\n  __typename?: 'Release';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  productVariant: ProductVariant;\n  type: StockMovementType;\n  quantity: Scalars['Int'];\n  orderItem: OrderItem;\n};\n\nexport type StockMovementItem = StockAdjustment | Allocation | Sale | Cancellation | Return | Release;\n\nexport type StockMovementList = {\n  __typename?: 'StockMovementList';\n  items: Array<StockMovementItem>;\n  totalItems: Scalars['Int'];\n};\n\nexport type TaxCategory = Node & {\n  __typename?: 'TaxCategory';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n};\n\nexport type TaxRate = Node & {\n  __typename?: 'TaxRate';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  value: Scalars['Float'];\n  category: TaxCategory;\n  zone: Zone;\n  customerGroup?: Maybe<CustomerGroup>;\n};\n\nexport type TaxRateList = PaginatedList & {\n  __typename?: 'TaxRateList';\n  items: Array<TaxRate>;\n  totalItems: Scalars['Int'];\n};\n\nexport type User = Node & {\n  __typename?: 'User';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  identifier: Scalars['String'];\n  verified: Scalars['Boolean'];\n  roles: Array<Role>;\n  lastLogin?: Maybe<Scalars['DateTime']>;\n  authenticationMethods: Array<AuthenticationMethod>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type AuthenticationMethod = Node & {\n  __typename?: 'AuthenticationMethod';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  strategy: Scalars['String'];\n};\n\nexport type Zone = Node & {\n  __typename?: 'Zone';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  members: Array<Country>;\n};\n\nexport type ProductReview = Node & {\n  __typename?: 'ProductReview';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  product: Product;\n  productVariant?: Maybe<ProductVariant>;\n  summary: Scalars['String'];\n  body?: Maybe<Scalars['String']>;\n  rating: Scalars['Float'];\n  author?: Maybe<Customer>;\n  authorName: Scalars['String'];\n  authorLocation?: Maybe<Scalars['String']>;\n  upvotes: Scalars['Int'];\n  downvotes: Scalars['Int'];\n  state: Scalars['String'];\n  response?: Maybe<Scalars['String']>;\n  responseCreatedAt?: Maybe<Scalars['DateTime']>;\n};\n\nexport type ProductReviewList = PaginatedList & {\n  __typename?: 'ProductReviewList';\n  items: Array<ProductReview>;\n  totalItems: Scalars['Int'];\n};\n\nexport type ProductReviewHistogramItem = {\n  __typename?: 'ProductReviewHistogramItem';\n  bin: Scalars['Int'];\n  frequency: Scalars['Int'];\n};\n\nexport type UpdateProductReviewInput = {\n  id: Scalars['ID'];\n  summary?: Maybe<Scalars['String']>;\n  body?: Maybe<Scalars['String']>;\n  response?: Maybe<Scalars['String']>;\n};\n\nexport type AdministratorListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<AdministratorSortParameter>;\n  filter?: Maybe<AdministratorFilterParameter>;\n};\n\nexport type AssetListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<AssetSortParameter>;\n  filter?: Maybe<AssetFilterParameter>;\n};\n\nexport type CollectionListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<CollectionSortParameter>;\n  filter?: Maybe<CollectionFilterParameter>;\n};\n\nexport type CountryListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<CountrySortParameter>;\n  filter?: Maybe<CountryFilterParameter>;\n};\n\nexport type CustomerGroupListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<CustomerGroupSortParameter>;\n  filter?: Maybe<CustomerGroupFilterParameter>;\n};\n\nexport type CustomerListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<CustomerSortParameter>;\n  filter?: Maybe<CustomerFilterParameter>;\n};\n\nexport type FacetListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<FacetSortParameter>;\n  filter?: Maybe<FacetFilterParameter>;\n};\n\nexport type JobListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<JobSortParameter>;\n  filter?: Maybe<JobFilterParameter>;\n};\n\nexport type OrderListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<OrderSortParameter>;\n  filter?: Maybe<OrderFilterParameter>;\n};\n\nexport type PaymentMethodListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<PaymentMethodSortParameter>;\n  filter?: Maybe<PaymentMethodFilterParameter>;\n};\n\nexport type ProductListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<ProductSortParameter>;\n  filter?: Maybe<ProductFilterParameter>;\n};\n\nexport type PromotionListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<PromotionSortParameter>;\n  filter?: Maybe<PromotionFilterParameter>;\n};\n\nexport type RoleListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<RoleSortParameter>;\n  filter?: Maybe<RoleFilterParameter>;\n};\n\nexport type ShippingMethodListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<ShippingMethodSortParameter>;\n  filter?: Maybe<ShippingMethodFilterParameter>;\n};\n\nexport type TaxRateListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<TaxRateSortParameter>;\n  filter?: Maybe<TaxRateFilterParameter>;\n};\n\nexport type ProductReviewListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<ProductReviewSortParameter>;\n  filter?: Maybe<ProductReviewFilterParameter>;\n};\n\nexport type ProductVariantListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<ProductVariantSortParameter>;\n  filter?: Maybe<ProductVariantFilterParameter>;\n};\n\nexport type HistoryEntryListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<HistoryEntrySortParameter>;\n  filter?: Maybe<HistoryEntryFilterParameter>;\n};\n\nexport type AdministratorFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  firstName?: Maybe<StringOperators>;\n  lastName?: Maybe<StringOperators>;\n  emailAddress?: Maybe<StringOperators>;\n};\n\nexport type AdministratorSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  firstName?: Maybe<SortOrder>;\n  lastName?: Maybe<SortOrder>;\n  emailAddress?: Maybe<SortOrder>;\n};\n\nexport type AssetFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  name?: Maybe<StringOperators>;\n  type?: Maybe<StringOperators>;\n  fileSize?: Maybe<NumberOperators>;\n  mimeType?: Maybe<StringOperators>;\n  width?: Maybe<NumberOperators>;\n  height?: Maybe<NumberOperators>;\n  source?: Maybe<StringOperators>;\n  preview?: Maybe<StringOperators>;\n};\n\nexport type AssetSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  name?: Maybe<SortOrder>;\n  fileSize?: Maybe<SortOrder>;\n  mimeType?: Maybe<SortOrder>;\n  width?: Maybe<SortOrder>;\n  height?: Maybe<SortOrder>;\n  source?: Maybe<SortOrder>;\n  preview?: Maybe<SortOrder>;\n};\n\nexport type CollectionFilterParameter = {\n  isPrivate?: Maybe<BooleanOperators>;\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  languageCode?: Maybe<StringOperators>;\n  name?: Maybe<StringOperators>;\n  slug?: Maybe<StringOperators>;\n  position?: Maybe<NumberOperators>;\n  description?: Maybe<StringOperators>;\n};\n\nexport type CollectionSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  name?: Maybe<SortOrder>;\n  slug?: Maybe<SortOrder>;\n  position?: Maybe<SortOrder>;\n  description?: Maybe<SortOrder>;\n};\n\nexport type CountryFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  languageCode?: Maybe<StringOperators>;\n  code?: Maybe<StringOperators>;\n  name?: Maybe<StringOperators>;\n  enabled?: Maybe<BooleanOperators>;\n};\n\nexport type CountrySortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  code?: Maybe<SortOrder>;\n  name?: Maybe<SortOrder>;\n};\n\nexport type CustomerGroupFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  name?: Maybe<StringOperators>;\n};\n\nexport type CustomerGroupSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  name?: Maybe<SortOrder>;\n};\n\nexport type CustomerFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  title?: Maybe<StringOperators>;\n  firstName?: Maybe<StringOperators>;\n  lastName?: Maybe<StringOperators>;\n  phoneNumber?: Maybe<StringOperators>;\n  emailAddress?: Maybe<StringOperators>;\n};\n\nexport type CustomerSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  title?: Maybe<SortOrder>;\n  firstName?: Maybe<SortOrder>;\n  lastName?: Maybe<SortOrder>;\n  phoneNumber?: Maybe<SortOrder>;\n  emailAddress?: Maybe<SortOrder>;\n};\n\nexport type FacetFilterParameter = {\n  isPrivate?: Maybe<BooleanOperators>;\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  languageCode?: Maybe<StringOperators>;\n  name?: Maybe<StringOperators>;\n  code?: Maybe<StringOperators>;\n};\n\nexport type FacetSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  name?: Maybe<SortOrder>;\n  code?: Maybe<SortOrder>;\n};\n\nexport type JobFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  startedAt?: Maybe<DateOperators>;\n  settledAt?: Maybe<DateOperators>;\n  queueName?: Maybe<StringOperators>;\n  state?: Maybe<StringOperators>;\n  progress?: Maybe<NumberOperators>;\n  isSettled?: Maybe<BooleanOperators>;\n  duration?: Maybe<NumberOperators>;\n};\n\nexport type JobSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  startedAt?: Maybe<SortOrder>;\n  settledAt?: Maybe<SortOrder>;\n  queueName?: Maybe<SortOrder>;\n  progress?: Maybe<SortOrder>;\n  duration?: Maybe<SortOrder>;\n};\n\nexport type OrderFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  orderPlacedAt?: Maybe<DateOperators>;\n  code?: Maybe<StringOperators>;\n  state?: Maybe<StringOperators>;\n  active?: Maybe<BooleanOperators>;\n  totalQuantity?: Maybe<NumberOperators>;\n  subTotalBeforeTax?: Maybe<NumberOperators>;\n  subTotal?: Maybe<NumberOperators>;\n  currencyCode?: Maybe<StringOperators>;\n  shipping?: Maybe<NumberOperators>;\n  shippingWithTax?: Maybe<NumberOperators>;\n  totalBeforeTax?: Maybe<NumberOperators>;\n  total?: Maybe<NumberOperators>;\n};\n\nexport type OrderSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  orderPlacedAt?: Maybe<SortOrder>;\n  code?: Maybe<SortOrder>;\n  state?: Maybe<SortOrder>;\n  totalQuantity?: Maybe<SortOrder>;\n  subTotalBeforeTax?: Maybe<SortOrder>;\n  subTotal?: Maybe<SortOrder>;\n  shipping?: Maybe<SortOrder>;\n  shippingWithTax?: Maybe<SortOrder>;\n  totalBeforeTax?: Maybe<SortOrder>;\n  total?: Maybe<SortOrder>;\n};\n\nexport type PaymentMethodFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  code?: Maybe<StringOperators>;\n  enabled?: Maybe<BooleanOperators>;\n};\n\nexport type PaymentMethodSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  code?: Maybe<SortOrder>;\n};\n\nexport type ProductFilterParameter = {\n  enabled?: Maybe<BooleanOperators>;\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  languageCode?: Maybe<StringOperators>;\n  name?: Maybe<StringOperators>;\n  slug?: Maybe<StringOperators>;\n  description?: Maybe<StringOperators>;\n  reviewRating?: Maybe<NumberOperators>;\n  reviewCount?: Maybe<NumberOperators>;\n};\n\nexport type ProductSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  name?: Maybe<SortOrder>;\n  slug?: Maybe<SortOrder>;\n  description?: Maybe<SortOrder>;\n  reviewRating?: Maybe<SortOrder>;\n  reviewCount?: Maybe<SortOrder>;\n};\n\nexport type PromotionFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  startsAt?: Maybe<DateOperators>;\n  endsAt?: Maybe<DateOperators>;\n  couponCode?: Maybe<StringOperators>;\n  perCustomerUsageLimit?: Maybe<NumberOperators>;\n  name?: Maybe<StringOperators>;\n  enabled?: Maybe<BooleanOperators>;\n};\n\nexport type PromotionSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  startsAt?: Maybe<SortOrder>;\n  endsAt?: Maybe<SortOrder>;\n  couponCode?: Maybe<SortOrder>;\n  perCustomerUsageLimit?: Maybe<SortOrder>;\n  name?: Maybe<SortOrder>;\n};\n\nexport type RoleFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  code?: Maybe<StringOperators>;\n  description?: Maybe<StringOperators>;\n};\n\nexport type RoleSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  code?: Maybe<SortOrder>;\n  description?: Maybe<SortOrder>;\n};\n\nexport type ShippingMethodFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  code?: Maybe<StringOperators>;\n  name?: Maybe<StringOperators>;\n  description?: Maybe<StringOperators>;\n};\n\nexport type ShippingMethodSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  code?: Maybe<SortOrder>;\n  name?: Maybe<SortOrder>;\n  description?: Maybe<SortOrder>;\n};\n\nexport type TaxRateFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  name?: Maybe<StringOperators>;\n  enabled?: Maybe<BooleanOperators>;\n  value?: Maybe<NumberOperators>;\n};\n\nexport type TaxRateSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  name?: Maybe<SortOrder>;\n  value?: Maybe<SortOrder>;\n};\n\nexport type ProductReviewFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  summary?: Maybe<StringOperators>;\n  body?: Maybe<StringOperators>;\n  rating?: Maybe<NumberOperators>;\n  authorName?: Maybe<StringOperators>;\n  authorLocation?: Maybe<StringOperators>;\n  upvotes?: Maybe<NumberOperators>;\n  downvotes?: Maybe<NumberOperators>;\n  state?: Maybe<StringOperators>;\n  response?: Maybe<StringOperators>;\n  responseCreatedAt?: Maybe<DateOperators>;\n};\n\nexport type ProductReviewSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  summary?: Maybe<SortOrder>;\n  body?: Maybe<SortOrder>;\n  rating?: Maybe<SortOrder>;\n  authorName?: Maybe<SortOrder>;\n  authorLocation?: Maybe<SortOrder>;\n  upvotes?: Maybe<SortOrder>;\n  downvotes?: Maybe<SortOrder>;\n  state?: Maybe<SortOrder>;\n  response?: Maybe<SortOrder>;\n  responseCreatedAt?: Maybe<SortOrder>;\n};\n\nexport type ProductVariantFilterParameter = {\n  enabled?: Maybe<BooleanOperators>;\n  trackInventory?: Maybe<StringOperators>;\n  stockOnHand?: Maybe<NumberOperators>;\n  stockAllocated?: Maybe<NumberOperators>;\n  outOfStockThreshold?: Maybe<NumberOperators>;\n  useGlobalOutOfStockThreshold?: Maybe<BooleanOperators>;\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  languageCode?: Maybe<StringOperators>;\n  sku?: Maybe<StringOperators>;\n  name?: Maybe<StringOperators>;\n  price?: Maybe<NumberOperators>;\n  currencyCode?: Maybe<StringOperators>;\n  priceIncludesTax?: Maybe<BooleanOperators>;\n  priceWithTax?: Maybe<NumberOperators>;\n};\n\nexport type ProductVariantSortParameter = {\n  stockOnHand?: Maybe<SortOrder>;\n  stockAllocated?: Maybe<SortOrder>;\n  outOfStockThreshold?: Maybe<SortOrder>;\n  id?: Maybe<SortOrder>;\n  productId?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  sku?: Maybe<SortOrder>;\n  name?: Maybe<SortOrder>;\n  price?: Maybe<SortOrder>;\n  priceWithTax?: Maybe<SortOrder>;\n};\n\nexport type HistoryEntryFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  isPublic?: Maybe<BooleanOperators>;\n  type?: Maybe<StringOperators>;\n};\n\nexport type HistoryEntrySortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n};\n\nexport type ProductCustomFields = {\n  __typename?: 'ProductCustomFields';\n  reviewRating?: Maybe<Scalars['Float']>;\n  reviewCount?: Maybe<Scalars['Float']>;\n};\n\nexport type CreateProductCustomFieldsInput = {\n  reviewRating?: Maybe<Scalars['Float']>;\n  reviewCount?: Maybe<Scalars['Float']>;\n};\n\nexport type UpdateProductCustomFieldsInput = {\n  reviewRating?: Maybe<Scalars['Float']>;\n  reviewCount?: Maybe<Scalars['Float']>;\n};\n\nexport type CustomFields = {\n  __typename?: 'CustomFields';\n  Address: Array<CustomFieldConfig>;\n  Collection: Array<CustomFieldConfig>;\n  Customer: Array<CustomFieldConfig>;\n  Facet: Array<CustomFieldConfig>;\n  FacetValue: Array<CustomFieldConfig>;\n  Fulfillment: Array<CustomFieldConfig>;\n  GlobalSettings: Array<CustomFieldConfig>;\n  Order: Array<CustomFieldConfig>;\n  OrderLine: Array<CustomFieldConfig>;\n  Product: Array<CustomFieldConfig>;\n  ProductOption: Array<CustomFieldConfig>;\n  ProductOptionGroup: Array<CustomFieldConfig>;\n  ProductVariant: Array<CustomFieldConfig>;\n  User: Array<CustomFieldConfig>;\n  ShippingMethod: Array<CustomFieldConfig>;\n};\n\nexport type AuthenticationInput = {\n  native?: Maybe<NativeAuthInput>;\n};\n\nexport type NativeAuthInput = {\n  username: Scalars['String'];\n  password: Scalars['String'];\n};\n\nexport namespace ProductReview {\n  export type Fragment = ProductReviewFragment;\n}\n\nexport namespace GetAllReviews {\n  export type Variables = GetAllReviewsQueryVariables;\n  export type Query = GetAllReviewsQuery;\n  export type ProductReviews = (NonNullable<GetAllReviewsQuery['productReviews']>);\n  export type Items = NonNullable<(NonNullable<(NonNullable<GetAllReviewsQuery['productReviews']>)['items']>)[number]>;\n  export type Product = (NonNullable<NonNullable<(NonNullable<(NonNullable<GetAllReviewsQuery['productReviews']>)['items']>)[number]>['product']>);\n  export type FeaturedAsset = (NonNullable<(NonNullable<NonNullable<(NonNullable<(NonNullable<GetAllReviewsQuery['productReviews']>)['items']>)[number]>['product']>)['featuredAsset']>);\n}\n\nexport namespace UpdateReview {\n  export type Variables = UpdateReviewMutationVariables;\n  export type Mutation = UpdateReviewMutation;\n  export type UpdateProductReview = (NonNullable<UpdateReviewMutation['updateProductReview']>);\n}\n\nexport namespace ApproveReview {\n  export type Variables = ApproveReviewMutationVariables;\n  export type Mutation = ApproveReviewMutation;\n  export type ApproveProductReview = (NonNullable<ApproveReviewMutation['approveProductReview']>);\n  export type Product = (NonNullable<(NonNullable<ApproveReviewMutation['approveProductReview']>)['product']>);\n  export type CustomFields = (NonNullable<(NonNullable<(NonNullable<ApproveReviewMutation['approveProductReview']>)['product']>)['customFields']>);\n}\n\nexport namespace RejectReview {\n  export type Variables = RejectReviewMutationVariables;\n  export type Mutation = RejectReviewMutation;\n  export type RejectProductReview = (NonNullable<RejectReviewMutation['rejectProductReview']>);\n}\n\nexport namespace GetReviewForProduct {\n  export type Variables = GetReviewForProductQueryVariables;\n  export type Query = GetReviewForProductQuery;\n  export type Product = (NonNullable<GetReviewForProductQuery['product']>);\n  export type Reviews = (NonNullable<(NonNullable<GetReviewForProductQuery['product']>)['reviews']>);\n  export type Items = NonNullable<(NonNullable<(NonNullable<(NonNullable<GetReviewForProductQuery['product']>)['reviews']>)['items']>)[number]>;\n}\n\nexport namespace GetReviewsHistogram {\n  export type Variables = GetReviewsHistogramQueryVariables;\n  export type Query = GetReviewsHistogramQuery;\n  export type Product = (NonNullable<GetReviewsHistogramQuery['product']>);\n  export type FeaturedAsset = (NonNullable<(NonNullable<GetReviewsHistogramQuery['product']>)['featuredAsset']>);\n  export type CustomFields = (NonNullable<(NonNullable<GetReviewsHistogramQuery['product']>)['customFields']>);\n  export type ReviewsHistogram = NonNullable<(NonNullable<(NonNullable<GetReviewsHistogramQuery['product']>)['reviewsHistogram']>)[number]>;\n}\n\nexport namespace GetProductName {\n  export type Variables = GetProductNameQueryVariables;\n  export type Query = GetProductNameQuery;\n  export type Product = (NonNullable<GetProductNameQuery['product']>);\n}\n\nexport namespace GetReview {\n  export type Variables = GetReviewQueryVariables;\n  export type Query = GetReviewQuery;\n  export type ProductReview = (NonNullable<GetReviewQuery['productReview']>);\n  export type Product = (NonNullable<(NonNullable<GetReviewQuery['productReview']>)['product']>);\n  export type FeaturedAsset = (NonNullable<(NonNullable<(NonNullable<GetReviewQuery['productReview']>)['product']>)['featuredAsset']>);\n  export type ProductVariant = (NonNullable<(NonNullable<GetReviewQuery['productReview']>)['productVariant']>);\n  export type _FeaturedAsset = (NonNullable<(NonNullable<(NonNullable<GetReviewQuery['productReview']>)['productVariant']>)['featuredAsset']>);\n}\n\nexport type ProductReviewFragment = (\n  { __typename?: 'ProductReview' }\n  & Pick<ProductReview, 'id' | 'createdAt' | 'updatedAt' | 'authorName' | 'authorLocation' | 'summary' | 'body' | 'rating' | 'state' | 'upvotes' | 'downvotes' | 'response' | 'responseCreatedAt'>\n);\n\nexport type GetAllReviewsQueryVariables = Exact<{\n  options?: Maybe<ProductReviewListOptions>;\n}>;\n\n\nexport type GetAllReviewsQuery = (\n  { __typename?: 'Query' }\n  & { productReviews: (\n    { __typename?: 'ProductReviewList' }\n    & Pick<ProductReviewList, 'totalItems'>\n    & { items: Array<(\n      { __typename?: 'ProductReview' }\n      & { product: (\n        { __typename?: 'Product' }\n        & Pick<Product, 'id' | 'name'>\n        & { featuredAsset?: Maybe<(\n          { __typename?: 'Asset' }\n          & Pick<Asset, 'id' | 'preview'>\n        )> }\n      ) }\n      & ProductReviewFragment\n    )> }\n  ) }\n);\n\nexport type UpdateReviewMutationVariables = Exact<{\n  input: UpdateProductReviewInput;\n}>;\n\n\nexport type UpdateReviewMutation = (\n  { __typename?: 'Mutation' }\n  & { updateProductReview: (\n    { __typename?: 'ProductReview' }\n    & ProductReviewFragment\n  ) }\n);\n\nexport type ApproveReviewMutationVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type ApproveReviewMutation = (\n  { __typename?: 'Mutation' }\n  & { approveProductReview?: Maybe<(\n    { __typename?: 'ProductReview' }\n    & Pick<ProductReview, 'id' | 'state'>\n    & { product: (\n      { __typename?: 'Product' }\n      & Pick<Product, 'id'>\n      & { customFields?: Maybe<(\n        { __typename?: 'ProductCustomFields' }\n        & Pick<ProductCustomFields, 'reviewCount' | 'reviewRating'>\n      )> }\n    ) }\n  )> }\n);\n\nexport type RejectReviewMutationVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type RejectReviewMutation = (\n  { __typename?: 'Mutation' }\n  & { rejectProductReview?: Maybe<(\n    { __typename?: 'ProductReview' }\n    & Pick<ProductReview, 'id' | 'state'>\n  )> }\n);\n\nexport type GetReviewForProductQueryVariables = Exact<{\n  productId: Scalars['ID'];\n  options?: Maybe<ProductReviewListOptions>;\n}>;\n\n\nexport type GetReviewForProductQuery = (\n  { __typename?: 'Query' }\n  & { product?: Maybe<(\n    { __typename?: 'Product' }\n    & Pick<Product, 'id'>\n    & { reviews: (\n      { __typename?: 'ProductReviewList' }\n      & Pick<ProductReviewList, 'totalItems'>\n      & { items: Array<(\n        { __typename?: 'ProductReview' }\n        & ProductReviewFragment\n      )> }\n    ) }\n  )> }\n);\n\nexport type GetReviewsHistogramQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetReviewsHistogramQuery = (\n  { __typename?: 'Query' }\n  & { product?: Maybe<(\n    { __typename?: 'Product' }\n    & Pick<Product, 'id' | 'name'>\n    & { featuredAsset?: Maybe<(\n      { __typename?: 'Asset' }\n      & Pick<Asset, 'id' | 'preview'>\n    )>, customFields?: Maybe<(\n      { __typename?: 'ProductCustomFields' }\n      & Pick<ProductCustomFields, 'reviewRating' | 'reviewCount'>\n    )>, reviewsHistogram: Array<(\n      { __typename?: 'ProductReviewHistogramItem' }\n      & Pick<ProductReviewHistogramItem, 'bin' | 'frequency'>\n    )> }\n  )> }\n);\n\nexport type GetProductNameQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetProductNameQuery = (\n  { __typename?: 'Query' }\n  & { product?: Maybe<(\n    { __typename?: 'Product' }\n    & Pick<Product, 'id' | 'name'>\n  )> }\n);\n\nexport type GetReviewQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetReviewQuery = (\n  { __typename?: 'Query' }\n  & { productReview?: Maybe<(\n    { __typename?: 'ProductReview' }\n    & { product: (\n      { __typename?: 'Product' }\n      & Pick<Product, 'id' | 'name'>\n      & { featuredAsset?: Maybe<(\n        { __typename?: 'Asset' }\n        & Pick<Asset, 'id' | 'preview'>\n      )> }\n    ), productVariant?: Maybe<(\n      { __typename?: 'ProductVariant' }\n      & Pick<ProductVariant, 'id' | 'name'>\n      & { featuredAsset?: Maybe<(\n        { __typename?: 'Asset' }\n        & Pick<Asset, 'id' | 'preview'>\n      )> }\n    )> }\n    & ProductReviewFragment\n  )> }\n);\n","<vdr-action-bar>\n    <vdr-ab-left>\n        <div class=\"filter-controls\">\n            <select clrSelect name=\"state\" [(ngModel)]=\"filteredState\" (change)=\"refresh()\">\n                <option [ngValue]=\"null\">All reviews</option>\n                <option value=\"new\">Reviews pending approval</option>\n                <option value=\"approved\">Approved reviews</option>\n                <option value=\"rejected\">Rejected reviews</option>\n            </select>\n        </div>\n    </vdr-ab-left>\n    <vdr-ab-right>\n    </vdr-ab-right>\n</vdr-action-bar>\n<vdr-data-table\n    [items]=\"items$ | async\"\n    [itemsPerPage]=\"itemsPerPage$ | async\"\n    [totalItems]=\"totalItems$ | async\"\n    [currentPage]=\"currentPage$ | async\"\n    (pageChange)=\"setPageNumber($event)\"\n    (itemsPerPageChange)=\"setItemsPerPage($event)\"\n>\n    <vdr-dt-column>Submitted</vdr-dt-column>\n    <vdr-dt-column>Author</vdr-dt-column>\n    <vdr-dt-column>Product</vdr-dt-column>\n    <vdr-dt-column>Rating</vdr-dt-column>\n    <vdr-dt-column>Summary</vdr-dt-column>\n    <vdr-dt-column>Status</vdr-dt-column>\n    <vdr-dt-column></vdr-dt-column>\n    <ng-template let-review=\"item\">\n        <td class=\"left align-middle\">\n            {{ review.createdAt | date:'mediumDate' }}\n        </td>\n        <td class=\"left align-middle\">{{ review.authorName }}</td>\n        <td class=\"left align-middle\">\n            <div class=\"product-info\">\n                <img [src]=\"review.product.featuredAsset?.preview + '?preset=tiny'\" width=\"50\" height=\"50\">\n                <span class=\"product-name\">{{ review.product.name }}</span>\n            </div>\n        </td>\n\n        <td class=\"left align-middle\">\n\n            <kb-star-rating [rating]=\"review.rating\"></kb-star-rating>\n        </td>\n        <td class=\"left align-middle\">{{ review.summary }}</td>\n        <td class=\"left align-middle\">\n            <kb-review-state-label [state]=\"review.state\"></kb-review-state-label>\n        </td>\n        <td class=\"right align-middle\">\n            <vdr-table-row-action\n                iconShape=\"edit\"\n                [label]=\"'common.edit' | translate\"\n                [linkTo]=\"['/extensions', 'product-reviews', review.id]\"\n            ></vdr-table-row-action>\n        </td>\n    </ng-template>\n</vdr-data-table>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BaseListComponent, DataService } from '@vendure/admin-ui/core';\n\nimport { GetAllReviews, SortOrder } from '../../generated-types';\n\nimport { GET_ALL_REVIEWS } from './all-product-reviews-list.graphql';\n\n@Component({\n    selector: 'kb-all-product-reviews-list',\n    templateUrl: './all-product-reviews-list.component.html',\n    styleUrls: ['./all-product-reviews-list.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AllProductReviewsListComponent extends BaseListComponent<\n    GetAllReviews.Query,\n    GetAllReviews.Items,\n    GetAllReviews.Variables\n> {\n    filteredState: string | null = 'new';\n\n    constructor(private dataService: DataService, router: Router, route: ActivatedRoute) {\n        super(router, route);\n        super.setQueryFn(\n            (...args: any[]) => {\n                return this.dataService.query<GetAllReviews.Query>(GET_ALL_REVIEWS, args);\n            },\n            data => data.productReviews,\n            (skip, take) => {\n                return {\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    productId: route.snapshot.paramMap.get('id')!,\n                    options: {\n                        skip,\n                        take,\n                        sort: {\n                            createdAt: SortOrder.Desc,\n                        },\n                        ...(this.filteredState != null\n                            ? {\n                                  filter: {\n                                      state: {\n                                          eq: this.filteredState,\n                                      },\n                                  },\n                              }\n                            : {}),\n                    },\n                };\n            },\n        );\n    }\n}\n","import gql from 'graphql-tag';\n\nimport { PRODUCT_REVIEW_FRAGMENT } from '../../common/fragments.graphql';\n\nexport const UPDATE_REVIEW = gql`\n    mutation UpdateReview($input: UpdateProductReviewInput!) {\n        updateProductReview(input: $input) {\n            ...ProductReview\n        }\n    }\n    ${PRODUCT_REVIEW_FRAGMENT}\n`;\n\nexport const APPROVE_REVIEW = gql`\n    mutation ApproveReview($id: ID!) {\n        approveProductReview(id: $id) {\n            id\n            state\n            product {\n                id\n                customFields {\n                    reviewCount\n                    reviewRating\n                }\n            }\n        }\n    }\n`;\n\nexport const REJECT_REVIEW = gql`\n    mutation RejectReview($id: ID!) {\n        rejectProductReview(id: $id) {\n            id\n            state\n        }\n    }\n`;\n","<vdr-action-bar>\n    <vdr-ab-left>\n        <div class=\"review-info\">\n            <vdr-entity-info [entity]=\"entity$ | async\"></vdr-entity-info>\n            <kb-review-state-label [state]=\"reviewState$ | async\"></kb-review-state-label>\n        </div>\n    </vdr-ab-left>\n    <vdr-ab-right>\n        <ng-container *ngIf=\"(reviewState$ | async) === 'new'; else updateButton\">\n            <button\n                *vdrIfPermissions=\"'UpdateCatalog'\"\n                class=\"btn btn-success\"\n                (click)=\"approve()\"\n                [disabled]=\"detailForm.invalid\"\n            >\n                <clr-icon shape=\"check\"></clr-icon>\n                Approve\n            </button>\n            <button\n                *vdrIfPermissions=\"'UpdateCatalog'\"\n                class=\"btn btn-warning\"\n                (click)=\"reject()\"\n                [disabled]=\"detailForm.invalid\"\n            >\n                <clr-icon shape=\"times\"></clr-icon>\n                Reject\n            </button>\n        </ng-container>\n        <ng-template #updateButton>\n            <button\n                *vdrIfPermissions=\"'UpdateCatalog'\"\n                class=\"btn btn-primary\"\n                (click)=\"save()\"\n                [disabled]=\"detailForm.invalid || detailForm.pristine\"\n            >\n                {{ 'common.update' | translate }}\n            </button>\n        </ng-template>\n    </vdr-ab-right>\n</vdr-action-bar>\n\n<div class=\"clr-row\">\n    <div class=\"clr-col\">\n        <form class=\"form\" [formGroup]=\"detailForm\">\n            <section class=\"form-block\">\n                <vdr-form-field label=\"Summary\" for=\"summary\">\n                    <input\n                        id=\"summary\"\n                        type=\"text\"\n                        formControlName=\"summary\"\n                        [readonly]=\"!('UpdateCatalog' | hasPermission)\"\n                    />\n                </vdr-form-field>\n                <vdr-form-field label=\"Rating\" for=\"rating\">\n                    <kb-star-rating [rating]=\"detailForm.get('rating')?.value\"></kb-star-rating>\n                </vdr-form-field>\n                <vdr-form-field label=\"Body\" for=\"body\">\n                    <textarea\n                        clrTextarea\n                        id=\"body\"\n                        formControlName=\"body\"\n                        [readonly]=\"!('UpdateCatalog' | hasPermission)\"\n                    ></textarea>\n                </vdr-form-field>\n                <vdr-form-field label=\"Author name\" for=\"authorName\">\n                    <input\n                        id=\"authorName\"\n                        type=\"text\"\n                        formControlName=\"authorName\"\n                        [readonly]=\"!('UpdateCatalog' | hasPermission)\"\n                    />\n                </vdr-form-field>\n                <vdr-form-field label=\"Author location\" for=\"authorLocation\">\n                    <input\n\n                        id=\"authorLocation\"\n                        type=\"text\"\n                        formControlName=\"authorLocation\"\n                        [readonly]=\"!('UpdateCatalog' | hasPermission)\"\n                    />\n                </vdr-form-field>\n                <vdr-form-field label=\"Response\" for=\"response\">\n                    <textarea\n                        clrTextarea\n                        id=\"response\"\n                        formControlName=\"response\"\n                        [readonly]=\"!('UpdateCatalog' | hasPermission)\"\n                    ></textarea>\n                </vdr-form-field>\n            </section>\n        </form>\n    </div>\n    <div class=\"clr-col-4\">\n        <div class=\"card\" *ngIf=\"entity$ | async as review\">\n            <div class=\"card-img\">\n                <img class=\"product-image\" [src]=\"review.product!.featuredAsset!.preview + '?preset=small'\" />\n            </div>\n            <div class=\"card-footer\">\n                <a [routerLink]=\"['/catalog', 'products', review.product.id]\">{{ review.product.name }}</a>\n            </div>\n        </div>\n    </div>\n</div>\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n    BaseDetailComponent,\n    DataService,\n    NotificationService,\n    ServerConfigService,\n} from '@vendure/admin-ui/core';\nimport { Observable, of } from 'rxjs';\nimport { filter, map, mapTo, switchMap } from 'rxjs/operators';\n\nimport { ReviewState } from '../../common/ui-types';\nimport {\n    ApproveReview,\n    ProductReview,\n    RejectReview,\n    UpdateProductReviewInput,\n    UpdateReview,\n} from '../../generated-types';\n\nimport { APPROVE_REVIEW, REJECT_REVIEW, UPDATE_REVIEW } from './product-review-detail.graphql';\n\n@Component({\n    selector: 'kb-product-review-detail',\n    templateUrl: './product-review-detail.component.html',\n    styleUrls: ['./product-review-detail.component.scss'],\n    changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class ProductReviewDetailComponent\n    extends BaseDetailComponent<ProductReview.Fragment>\n    implements OnInit {\n    detailForm: FormGroup;\n    reviewState$: Observable<ReviewState>;\n\n    constructor(\n        route: ActivatedRoute,\n        router: Router,\n        serverConfigService: ServerConfigService,\n        private formBuilder: FormBuilder,\n        protected dataService: DataService,\n        private changeDetector: ChangeDetectorRef,\n        private notificationService: NotificationService,\n    ) {\n        super(route, router, serverConfigService, dataService);\n        this.detailForm = this.formBuilder.group({\n            summary: ['', Validators.required],\n            body: '',\n            rating: [0, Validators.required],\n            authorName: ['', Validators.required],\n            authorLocation: '',\n            state: '',\n            response: '',\n        });\n    }\n\n    ngOnInit(): void {\n        this.init();\n        this.reviewState$ = this.entity$.pipe(map(review => review.state as ReviewState));\n    }\n\n    approve() {\n        this.saveChanges()\n            .pipe(\n                switchMap(() =>\n                    this.dataService.mutate<ApproveReview.Mutation, ApproveReview.Variables>(APPROVE_REVIEW, {\n                        id: this.id,\n                    }),\n                ),\n            )\n            .subscribe(\n                () => {\n                    this.detailForm.markAsPristine();\n                    this.changeDetector.markForCheck();\n                    this.notificationService.success('Review was approved');\n                },\n                () => {\n                    this.notificationService.error('An error occurred when attempting to approve the review');\n                },\n            );\n    }\n\n    reject() {\n        this.saveChanges()\n            .pipe(\n                switchMap(() =>\n                    this.dataService.mutate<RejectReview.Mutation, RejectReview.Variables>(REJECT_REVIEW, {\n                        id: this.id,\n                    }),\n                ),\n            )\n            .subscribe(\n                () => {\n                    this.detailForm.markAsPristine();\n                    this.changeDetector.markForCheck();\n                    this.notificationService.success('Review was rejected');\n                },\n                () => {\n                    this.notificationService.error('An error occurred when attempting to reject the review');\n                },\n            );\n    }\n\n    save() {\n        this.saveChanges()\n            .pipe(filter(result => !!result))\n            .subscribe(\n                () => {\n                    this.detailForm.markAsPristine();\n                    this.changeDetector.markForCheck();\n                    this.notificationService.success('common.notify-update-success', {\n                        entity: 'ProductReview',\n                    });\n                },\n                () => {\n                    this.notificationService.error('common.notify-update-error', {\n                        entity: 'ProductReview',\n                    });\n                },\n            );\n    }\n\n    private saveChanges(): Observable<boolean> {\n        if (this.detailForm.dirty) {\n            const formValue = this.detailForm.value;\n            const input: UpdateProductReviewInput = {\n                id: this.id,\n                summary: formValue.summary,\n                body: formValue.body,\n                response: formValue.response,\n            };\n            return this.dataService\n                .mutate<UpdateReview.Mutation, UpdateReview.Variables>(UPDATE_REVIEW, {\n                    input,\n                })\n                .pipe(mapTo(true));\n        } else {\n            return of(false);\n        }\n    }\n\n    protected setFormValues(entity: ProductReview.Fragment): void {\n        this.detailForm.patchValue({\n            summary: entity.summary,\n            body: entity.body,\n            rating: entity.rating,\n            authorName: entity.authorName,\n            authorLocation: entity.authorLocation,\n            state: entity.state,\n            response: entity.response,\n        });\n    }\n}\n","import gql from 'graphql-tag';\n\nimport { PRODUCT_REVIEW_FRAGMENT } from '../../common/fragments.graphql';\n\nexport const GET_REVIEWS_FOR_PRODUCT = gql`\n    query GetReviewForProduct($productId: ID!, $options: ProductReviewListOptions) {\n        product(id: $productId) {\n            id\n            reviews(options: $options) {\n                items {\n                    ...ProductReview\n                }\n                totalItems\n            }\n        }\n    }\n    ${PRODUCT_REVIEW_FRAGMENT}\n`;\n\nexport const GET_PRODUCT_PREVIEW_AND_HISTOGRAM = gql`\n    query GetReviewsHistogram($id: ID!) {\n        product(id: $id) {\n            id\n            name\n            featuredAsset {\n                id\n                preview\n            }\n            customFields {\n                reviewRating\n                reviewCount\n            }\n            reviewsHistogram {\n                bin\n                frequency\n            }\n        }\n    }\n`;\n","<div class=\"bar-container\" *ngFor=\"let bin of bins\">\n    <kb-star-rating [rating]=\"bin\" [showLabel]=\"false\"></kb-star-rating>\n    <div class=\"bar\">\n        <div class=\"fill\" [style.width.%]=\"getPercentage(bin)\"></div>\n    </div>\n    <div class=\"frequency\">\n        {{ getFrequency(bin) }}\n    </div>\n    <button class=\"icon-button filter-button\"\n            title=\"Filter reviews with this rating\"\n            [class.active]=\"filteredBin === bin\"\n            (click)=\"toggleBinFilter(bin)\"\n            [disabled]=\"getFrequency(bin) === 0\">\n        <clr-icon shape=\"filter-2\"></clr-icon>\n    </button>\n</div>\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, Output, EventEmitter } from '@angular/core';\n\nimport { ProductReviewHistogramItem } from '../../generated-types';\n\n@Component({\n    selector: 'kb-review-histogram',\n    templateUrl: './review-histogram.component.html',\n    styleUrls: ['./review-histogram.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReviewHistogramComponent implements OnChanges {\n    @Input() binData: ProductReviewHistogramItem[] | null = [];\n    @Output() filterChange = new EventEmitter<number | null>();\n    bins = [5, 4, 3, 2, 1];\n    filteredBin: number | null = null;\n    private max: number;\n\n    ngOnChanges() {\n        this.max = this.binData ? Math.max(...this.binData.map(d => d.frequency)) : 0;\n    }\n\n    getPercentage(bin: number): number {\n        if (!this.binData) {\n            return 0;\n        }\n        const data = this.binData.find(d => d.bin === bin);\n        if (!data) {\n            return 0;\n        }\n        return Math.round((data.frequency / this.max) * 100);\n    }\n\n    getFrequency(bin: number): number {\n        if (!this.binData) {\n            return 0;\n        }\n        const data = this.binData.find(d => d.bin === bin);\n        if (!data) {\n            return 0;\n        }\n        return data.frequency;\n    }\n\n    toggleBinFilter(bin: number) {\n        if (this.filteredBin === bin) {\n            this.filteredBin = null;\n        } else {\n            this.filteredBin = bin;\n        }\n        this.filterChange.emit(this.filteredBin);\n    }\n}\n","<vdr-action-bar>\n    <vdr-ab-left>\n        <div class=\"summary\">\n            <div class=\"image-preview\" *ngIf=\"product$ | async as product\">\n                <img [src]=\"product.featuredAsset?.preview + '?preset=tiny'\">\n                <kb-star-rating [rating]=\"product.customFields.reviewRating\"></kb-star-rating>\n            </div>\n            <kb-review-histogram [binData]=\"histogramBinData$ | async\"\n                                 (filterChange)=\"applyRatingFilters($event)\"></kb-review-histogram>\n        </div>\n    </vdr-ab-left>\n    <vdr-ab-right>\n    </vdr-ab-right>\n</vdr-action-bar>\n<vdr-data-table\n    [items]=\"items$ | async\"\n    [itemsPerPage]=\"itemsPerPage$ | async\"\n    [totalItems]=\"totalItems$ | async\"\n    [currentPage]=\"currentPage$ | async\"\n    (pageChange)=\"setPageNumber($event)\"\n    (itemsPerPageChange)=\"setItemsPerPage($event)\"\n>\n    <vdr-dt-column>Submitted</vdr-dt-column>\n    <vdr-dt-column>Author</vdr-dt-column>\n    <vdr-dt-column>Rating</vdr-dt-column>\n    <vdr-dt-column>Summary</vdr-dt-column>\n    <vdr-dt-column>Status</vdr-dt-column>\n    <vdr-dt-column></vdr-dt-column>\n    <ng-template let-review=\"item\">\n        <td class=\"left align-middle\">\n            {{ review.createdAt | date:'mediumDate' }}\n        </td>\n        <td class=\"left align-middle\">{{ review.authorName }}</td>\n        <td class=\"left align-middle\">\n\n            <kb-star-rating [rating]=\"review.rating\"></kb-star-rating>\n        </td>\n        <td class=\"left align-middle\">{{ review.summary }}</td>\n        <td class=\"left align-middle\">\n            <kb-review-state-label [state]=\"review.state\"></kb-review-state-label>\n        </td>\n\n        <td class=\"right align-middle\">\n\n            <vdr-table-row-action\n                iconShape=\"edit\"\n                [label]=\"'common.edit' | translate\"\n                [linkTo]=\"['/extensions', 'product-reviews', review.id]\"\n            ></vdr-table-row-action>\n        </td>\n    </ng-template>\n</vdr-data-table>\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BaseListComponent, DataService } from '@vendure/admin-ui/core';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\nimport {\n    GetReviewForProduct,\n    GetReviewsHistogram,\n    ProductReviewHistogramItem,\n    SortOrder,\n} from '../../generated-types';\n\nimport { GET_PRODUCT_PREVIEW_AND_HISTOGRAM, GET_REVIEWS_FOR_PRODUCT } from './product-reviews-list.graphql';\n\n@Component({\n    selector: 'kb-product-reviews-list',\n    templateUrl: './product-reviews-list.component.html',\n    styleUrls: ['./product-reviews-list.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductReviewsListComponent\n    extends BaseListComponent<\n        GetReviewForProduct.Query,\n        GetReviewForProduct.Items,\n        GetReviewForProduct.Variables\n    >\n    implements OnInit {\n    histogramBinData$: Observable<ProductReviewHistogramItem[]>;\n    product$: Observable<GetReviewsHistogram.Product | null | undefined>;\n    private filteredRating: number | null;\n\n    constructor(private dataService: DataService, router: Router, route: ActivatedRoute) {\n        super(router, route);\n        super.setQueryFn(\n            (...args: any[]) => {\n                return this.dataService.query(GET_REVIEWS_FOR_PRODUCT, args);\n            },\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            data => data.product!.reviews,\n            (skip, take) => {\n                return {\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    productId: route.snapshot.paramMap.get('id')!,\n                    options: {\n                        skip,\n                        take,\n                        sort: {\n                            createdAt: SortOrder.Desc,\n                        },\n                        ...(this.filteredRating != null\n                            ? {\n                                  filter: {\n                                      rating: {\n                                          eq: this.filteredRating,\n                                      },\n                                  },\n                              }\n                            : {}),\n                    },\n                };\n            },\n        );\n    }\n\n    ngOnInit() {\n        super.ngOnInit();\n        const productWithHistogram$ = this.dataService\n            .query<GetReviewsHistogram.Query, GetReviewsHistogram.Variables>(\n                GET_PRODUCT_PREVIEW_AND_HISTOGRAM,\n                {\n                    id: this.route.snapshot.paramMap.get('id') || '',\n                },\n            )\n            .single$.pipe(shareReplay(1));\n        this.histogramBinData$ = productWithHistogram$.pipe(\n            map(data => (data.product ? data.product.reviewsHistogram : [])),\n        );\n        this.product$ = productWithHistogram$.pipe(map(data => data.product));\n    }\n\n    applyRatingFilters(filteredBin: number) {\n        this.filteredRating = filteredBin;\n        this.refresh();\n    }\n}\n","import gql from 'graphql-tag';\n\nexport const GET_PRODUCT_NAME = gql`\n    query GetProductName($id: ID!) {\n        product(id: $id) {\n            id\n            name\n        }\n    }\n`;\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { DataService } from '@vendure/admin-ui/core';\nimport { Observable } from 'rxjs';\n\nimport { GetProductName } from '../../generated-types';\n\nimport { GET_PRODUCT_NAME } from './product-reviews-resolver.graphql';\n\n@Injectable()\nexport class ProductReviewsResolver implements Resolve<any> {\n    constructor(private dataService: DataService) {}\n\n    resolve(route: ActivatedRouteSnapshot): Observable<GetProductName.Product | null | undefined> {\n        return this.dataService\n            .query<GetProductName.Query, GetProductName.Variables>(GET_PRODUCT_NAME, {\n                id: route.paramMap.get('id') || '',\n            })\n            .mapSingle(data => data.product);\n    }\n}\n","import gql from 'graphql-tag';\n\nimport { PRODUCT_REVIEW_FRAGMENT } from '../../common/fragments.graphql';\n\nexport const GET_REVIEW = gql`\n    query GetReview($id: ID!) {\n        productReview(id: $id) {\n            ...ProductReview\n            product {\n                id\n                name\n                featuredAsset {\n                    id\n                    preview\n                }\n            }\n            productVariant {\n                id\n                name\n                featuredAsset {\n                    id\n                    preview\n                }\n            }\n        }\n    }\n    ${PRODUCT_REVIEW_FRAGMENT}\n`;\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { DataService } from '@vendure/admin-ui/core';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay, take } from 'rxjs/operators';\n\nimport { GetReview } from '../../generated-types';\n\nimport { GET_REVIEW } from './review-detail-resolver.graphql';\n\n@Injectable()\nexport class ReviewDetailResolver implements Resolve<any> {\n    constructor(private dataService: DataService) {}\n\n    resolve(\n        route: ActivatedRouteSnapshot,\n    ): Observable<Observable<GetReview.ProductReview | null | undefined>> {\n        const stream = this.dataService\n            .query<GetReview.Query, GetReview.Variables>(GET_REVIEW, {\n                id: route.paramMap.get('id') || '',\n            })\n            .mapStream(data => data.productReview)\n            .pipe(shareReplay(1));\n\n        return stream.pipe(\n            take(1),\n            map(() => stream),\n        );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { AllProductReviewsListComponent } from './components/all-product-reviews-list/all-product-reviews-list.component';\nimport { ProductReviewDetailComponent } from './components/product-review-detail/product-review-detail.component';\nimport { ProductReviewsListComponent } from './components/product-reviews-list/product-reviews-list.component';\nimport { ReviewHistogramComponent } from './components/review-histogram/review-histogram.component';\nimport { GetProductName, GetReview } from './generated-types';\nimport { ProductReviewsResolver } from './providers/routing/product-reviews-resolver';\nimport { ReviewDetailResolver } from './providers/routing/review-detail-resolver';\nimport { ReviewsSharedModule } from './reviews-shared.module';\n\n@NgModule({\n    imports: [\n        ReviewsSharedModule,\n        RouterModule.forChild([\n            {\n                path: 'product/:id',\n                component: ProductReviewsListComponent,\n                resolve: { data: ProductReviewsResolver },\n                data: { breadcrumb: productReviewsBreadcrumb },\n            },\n            {\n                path: '',\n                pathMatch: 'full',\n                component: AllProductReviewsListComponent,\n                data: {\n                    breadcrumb: [\n                        {\n                            label: 'Product reviews',\n                            link: ['/extensions', 'product-reviews'],\n                        },\n                    ],\n                },\n            },\n            {\n                path: ':id',\n                component: ProductReviewDetailComponent,\n                resolve: { entity: ReviewDetailResolver },\n                data: { breadcrumb: reviewDetailBreadcrumb },\n            },\n        ]),\n    ],\n    declarations: [\n        ProductReviewsListComponent,\n        ProductReviewDetailComponent,\n        ReviewHistogramComponent,\n        AllProductReviewsListComponent,\n    ],\n    providers: [ProductReviewsResolver, ReviewDetailResolver],\n})\nexport class ReviewsUiLazyModule {}\n\nexport function productReviewsBreadcrumb(resolved: { data: GetProductName.Product }, params: any) {\n    return [\n        {\n            label: 'breadcrumb.products',\n            link: ['/catalog', 'products'],\n        },\n        {\n            label: `${resolved.data.name}`,\n            link: ['/catalog', 'products', params.id],\n        },\n        {\n            label: 'Reviews',\n            link: [''],\n        },\n    ];\n}\n\nexport function reviewDetailBreadcrumb(resolved: { entity: Observable<GetReview.ProductReview> }) {\n    return resolved.entity.pipe(\n        map(entity => [\n            {\n                label: 'Product reviews',\n                link: ['/extensions', 'product-reviews'],\n            },\n            {\n                label: `${entity.id}`,\n                link: [],\n            },\n        ]),\n    );\n}\n"]}